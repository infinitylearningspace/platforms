"use strict";class mux{constructor(){if(this.isLocalFile=!1,window.location.origin.includes("/127.0.0.1")&&"file:"!=window.location.protocol)this.available=["webserial","websocket","webbluetooth"],this.currentChannel="webserial";else switch(window.location.protocol){case"file:":this.available=["webserial","websocket","webbluetooth"],this.currentChannel="webserial",this.isLocalFile=!0;break;case"https:":this.available=["webserial","webbluetooth"],this.currentChannel="webserial";break;case"http:":this.available=["websocket"],this.currentChannel="websocket"}this.ifunavailable={webserial:["https://bipes.net.br/beta2/ui","the HTTPS version"],websocket:["http:///bipes.net.br/beta2/ui","the HTTP version"],webbluetooth:["https://bipes.net.br/beta2/ui","the HTTPS version"]}}switch(e){this.available.includes(e)?(this.currentChannel=e,mux.disconnect(),this.connect()):void 0!=this.ifunavailable[e]?confirm(`The channel ${e} is not yet available in this version, but at ${this.ifunavailable[e][1]}, would you like to be redirected there?`)?window.location.replace(this.ifunavailable[e][0]):UI["channel-panel"].button.className=`icon ${this.currentChannel}`:alert(`The channel ${e} is not yet available in this version.`)}connect(){switch(this.currentChannel){case"websocket":Channel.websocket.connect(UI.workspace.websocket.url.value,UI.workspace.websocket.pass.value);break;case"webserial":Channel.webserial.connect();break;case"webbluetooth":Channel.webbluetooth.connect()}}static disconnect(){Channel.websocket.connected?Channel.websocket.ws.close():Channel.webserial.connected?Channel.webserial.disconnect():Channel.webbluetooth.connected&&Channel.webbluetooth.disconnect()}static connected(){return!!Channel.websocket.connected||!!Channel.webserial.connected||!!Channel.webbluetooth.connected}static bufferPush(e,t){let i;if("object"==typeof e)i=e;else if("string"==typeof e){if(Channel.websocket.connected)i=e.replace(/\r\n|\n/gm,"\r").match(/(.|[\r]){1,10}/g);else if(Channel.webserial.connected){var s=RegExp(`(.|[\r]){1,${Channel.webserial.packetSize}}`,"g");i=e.replace(/\r\n|\n/gm,"\r").match(s)}else if(Channel.webbluetooth.connected){var s=RegExp(`(.|[\r]){1,`,"g");i=e.replace(/\r\n|\n/gm,"\r").match(/(.|[\r]){1,5}/g)}}Channel.websocket.connected?(Channel.websocket.buffer_=Channel.websocket.buffer_.concat(i),void 0!=t&&Channel.websocket.completeBufferCallback.push(t)):Channel.webserial.connected?(Channel.webserial.buffer_=Channel.webserial.buffer_.concat(i),void 0!=t&&Channel.webserial.completeBufferCallback.push(t)):Channel.webbluetooth.connected?(Channel.webbluetooth.buffer_=Channel.webbluetooth.buffer_.concat(i),void 0!=t&&Channel.webbluetooth.completeBufferCallback.push(t)):UI.notify.send(MSG.notConnected)}static bufferUnshift(e){Channel.websocket.connected?Channel.websocket.buffer_.unshift(e):Channel.webserial.connected?Channel.webserial.buffer_.unshift(e):Channel.webbluetooth.connected?Channel.webbluetooth.buffer_.unshift(e):UI.notify.send(MSG.notConnected)}static clearBuffer(){Channel.websocket.connected?Channel.websocket.buffer_=[]:Channel.webserial.connected?(Channel.webserial.buffer_=[],Channel.webserial.completeBufferCallback=[]):Channel.webbluetooth.connected?Channel.webbluetooth.buffer_=[]:UI.notify.send(MSG.notConnected)}}class websocket{constructor(){this.ws,this.watcher,this.buffer_=[],this.connected=!1,this.completeBufferCallback=[]}watch(){if(0==this.ws.bufferedAmount){if(this.buffer_.length>0){UI.progress.remain(this.buffer_.length);try{["Uint8Array","String","Number"].includes(this.buffer_[0].constructor.name)&&this.ws.send(this.buffer_[0]),this.buffer_.shift()}catch(e){UI.notify.log(e)}}else UI.progress.end()}}connect(e,t){UI.workspace.connecting(),this.ws=new WebSocket(e),this.ws.binaryType="arraybuffer",this.ws.onopen=()=>{term.on(),term.write("\x1b[31mWelcome to BIPES Project using MicroPython!\x1b[m\r\n"),term.write("\x1b[31mSending password...\x1b[m\r\n"),this.ws.send(t+"\n\n"),this.connected=!0,UI.workspace.websocket.url.disabled=!0,this.ws.onmessage=e=>{if(e.data instanceof ArrayBuffer){var t=new Uint8Array(e.data);switch(console.log("binary state = "+Files.binary_state),Files.binary_state){case 11:if(0==Tool.decode_resp(t)){for(var i=0;i<Files.put_file_data.length;i+=1024)this.ws.send(Files.put_file_data.slice(i,i+1024));Files.binary_state=12}break;case 12:0==Tool.decode_resp(t)?(files.update_file_status("Sent "+Files.put_file_name+", "+Files.put_file_data.length+" bytes"),Files.listFiles()):files.update_file_status("Failed sending "+Files.put_file_name),Files.binary_state=0;break;case 21:if(console.log("get 1"),0==Tool.decode_resp(t)){console.log("get 2"),Files.binary_state=22;var s=new Uint8Array(1);s[0]=0,this.ws.send(s)}break;case 22:var c=t[0]|t[1]<<8;if(t.length==2+c){if(0==c)Files.binary_state=23;else{var n=new Uint8Array(Files.get_file_data.length+c);n.set(Files.get_file_data),n.set(t.slice(2),Files.get_file_data.length),Files.get_file_data=n,files.update_file_status("Getting "+Files.get_file_name+", "+Files.get_file_data.length+" bytes");var s=new Uint8Array(1);s[0]=0,this.ws.send(s)}}else Files.binary_state=0;break;case 23:0==Tool.decode_resp(t)?(files.update_file_status("Got "+Files.get_file_name+", "+Files.get_file_data.length+" bytes"),Files.viewOnly?Tool.updateSourceCode(new Blob([Files.get_file_data],{type:"text/plain"}),Files.get_file_name):saveAs(new Blob([Files.get_file_data],{type:"application/octet-stream"}),Files.get_file_name)):files.update_file_status("Failed getting "+Files.get_file_name),Files.binary_state=0;break;case 31:console.log("GET_VER",t),Files.binary_state=0}}if(term.write(e.data),"string"==typeof e.data){if(Tool.bipesVerify(),e.data.includes(">>> ")){if(UI.workspace.runButton.status=!0,UI.workspace.runButton.dom.className="icon",UI.workspace.toolbarButton.className="icon medium",this.completeBufferCallback.length>0)try{this.completeBufferCallback[0](),this.completeBufferCallback.shift()}catch(a){UI.notify.log(a)}}else e.data.includes("Access denied")?UI.notify.send("Wrong board password."):!0==UI.workspace.runButton.status&&UI.workspace.receiving()}Files.received_string=Files.received_string.concat(e.data)},this.watcher=setInterval(this.watch.bind(this),50)},this.ws.onclose=()=>{term&&term.write("\x1b[31mDisconnected\x1b[m\r\n"),term.off(),this.buffer_=[],this.connected=!1,UI.workspace.runAbort(),clearInterval(this.watcher)}}}class webserial{constructor(){this.port,this.watcher,this.watcherConnected_,this.buffer_=[],this.connected=!1,this.completeBufferCallback=[],this.last4chars="",this.encoder=new TextEncoder,this.appendStream=void 0,this.shouldListen=!0,this.packetSize=100,this.speed=115200}watch(){if(this.port&&this.port.writable&&!1==this.port.writable.locked){if(this.buffer_.length>0){UI.progress.remain(this.buffer_.length);try{this.serialWrite(this.buffer_[0])}catch(e){UI.notify.log(e)}}else UI.progress.end()}}connect(){if(void 0===navigator.serial){UI.notify.send(MSG.notAvailableFlag.replaceAll("$1","WebSerial API")),term.write(MSG.notAvailableFlag.replaceAll("$1","WebSerial API"));return}navigator.serial.requestPort().then(e=>{UI.workspace.connecting(),this.port=e,this.port.open({baudRate:[this.speed]}).then(()=>{let e=new WritableStream({write(e){if(Channel.webserial.shouldListen){if("string"==typeof e){if(Tool.bipesVerify(),Channel.webserial.last4chars=Channel.webserial.last4chars.concat(e.substr(-4,4)).substr(-4,4),Channel.webserial.last4chars.includes(">>> ")){if(UI.workspace.runButton.status=!0,UI.workspace.runButton.dom.className="icon",UI.workspace.toolbarButton.className="icon medium",Channel.webserial.completeBufferCallback.length>0){try{Channel.webserial.completeBufferCallback[0]()}catch(t){UI.notify.log(t)}Channel.webserial.completeBufferCallback.shift()}}else!0==UI.workspace.runButton.status&&UI.workspace.receiving();Files.received_string=Files.received_string.concat(e)}term.write(e)}}});this.port.readable.pipeThrough(new TextDecoderStream).pipeTo(e),this.connect_(),this.resetBoard()}).catch(e=>{11==e.code&&(this.connect_(),this.resetBoard(),this.shouldListen=!0),UI.notify.log(e)})}).catch(e=>{UI.notify.log(e)})}connect_(){term.on(),term.write("\x1b[31mConnected using Web Serial API !\x1b[m\r\n"),this.connected=!0,!0==UI.workspace.runButton.status&&UI.workspace.receiving(),this.watcher=setInterval(this.watch.bind(this),50)}disconnect(){let e=this.port.writable.getWriter();e.close().then(()=>{this.port.close().then(()=>{this.port=void 0}).catch(t=>{UI.notify.log(t),e.abort(),this.port=void 0,this.shouldListen=!1}),term&&term.write("\x1b[31mDisconnected\x1b[m\r\n"),this.buffer_=[],this.last4chars="",this.connected=!1,clearInterval(this.watcher),term.off(),UI.workspace.runAbort()})}resetBoard(){setTimeout(()=>{UI.workspace.resetBoard.checked?(term.write("\x1b[31mResetting the board...\x1b[m\r\n"),this.serialWrite("\x04")):this.serialWrite("\x03")},50)}serialWrite(e){let t;switch(e.constructor.name){case"Uint8Array":t=e;break;case"String":case"Number":t=this.encoder.encode(e)}if(this.port&&this.port.writable&&void 0!=t){let i=this.port.writable.getWriter();i.write(t).then(()=>{i.releaseLock(),this.buffer_.shift()})}}}class webbluetooth{constructor(){this.device=void 0,this.nusService=void 0,this.txCharacteristic=void 0,this.rxCharacteristic=void 0,this.sending=!1,this.watcher,this.buffer_=[],this.connected=!1,this.completeBufferCallback=[],this.last4chars=""}static get ServiceUUID(){return"6e400001-b5a3-f393-e0a9-e50e24dcca9e"}static get RXUUID(){return"6e400002-b5a3-f393-e0a9-e50e24dcca9e"}static get TXUUID(){return"6e400003-b5a3-f393-e0a9-e50e24dcca9e"}watch(){if(this.device&&this.device.gatt.connected&&this.buffer_.length>=1&&!this.sending)try{this.sendNextChunk(this.buffer_[0])}catch(e){UI.notify.log(e)}}sendNextChunk(e){return new Promise((t,i)=>{this.sending=!0;let s=new ArrayBuffer(e.length),c=new Uint8Array(s);c.set(e.split("").map(e=>e.charCodeAt(0)),0),this.rxCharacteristic.writeValue(c).then(()=>{this.buffer_.shift(),this.buffer_.length>0?(this.sendNextChunk(this.buffer_[0]),UI.progress.remain(this.buffer_.length)):(this.sending=!1,UI.progress.end())}).catch(e=>(UI.notify.log(e),Promise.resolve().then(()=>this.delayPromise(500)).then(()=>this.rxCharacteristic.writeValue(c)).catch(e=>{this.buffer_=[],UI.notify.log(e),"NetworkError: Failed to execute 'writeValue' on 'BluetoothRemoteGATTCharacteristic': GATT Server is disconnected. Cannot perform GATT operations. (Re)connect first with `device.gatt.connect`."==e&&UI.notify.send("Lost Bluetooth connection.")})))})}delayPromise(e){return new Promise(t=>{setTimeout(t,e)})}connect(){if(void 0===navigator.bluetooth){UI.notify.send(MSG.notAvailableFlag.replaceAll("$1","WebBluetooth API")),term.write(MSG.notAvailableFlag.replaceAll("$1","WebBluetooth API"));return}navigator.bluetooth.requestDevice({optionalServices:[webbluetooth.ServiceUUID],acceptAllDevices:!0}).then(e=>(UI.workspace.connecting(),this.device=e,UI.notify.log("Found "+e.name),UI.notify.log("Connecting to GATT Server..."),this.device.addEventListener("gattserverdisconnected",this.disconnect.bind(this)),e.gatt.connect())).then(e=>(UI.notify.log("Locate NUS service"),e.getPrimaryService(webbluetooth.ServiceUUID))).then(e=>{this.nusService=e,UI.notify.log("Found NUS service: "+e.uuid)}).then(()=>(UI.notify.log("Locate RX characteristic"),this.nusService.getCharacteristic(webbluetooth.RXUUID))).then(e=>{this.rxCharacteristic=e,UI.notify.log("Found RX characteristic")}).then(()=>(UI.notify.log("Locate TX characteristic"),this.nusService.getCharacteristic(webbluetooth.TXUUID))).then(e=>{this.txCharacteristic=e,UI.notify.log("Found TX characteristic")}).then(()=>(UI.notify.log("Enable notifications"),this.txCharacteristic.startNotifications())).then(()=>{UI.notify.log("Notifications started"),this.txCharacteristic.addEventListener("characteristicvaluechanged",this.handleNotifications.bind(this)),term.on(),term.write("\x1b[31mConnected using Web Bluetooth API !\x1b[m\r\n"),this.connected=!0,mux.bufferPush("\r"),!0==UI.workspace.runButton.status&&UI.workspace.receiving(),this.watcher=setInterval(this.watch.bind(this),50)}).catch(e=>{UI.notify.log(e),term.write(""+e),UI.workspace.runAbort(),this.device&&this.device.gatt.connected&&this.device.gatt.disconnect()})}disconnect(){this.device?(UI.notify.log("Disconnecting from Bluetooth Device..."),this.device.gatt.connected?this.device.gatt.disconnect():UI.notify.log("> Bluetooth Device is already disconnected")):UI.notify.log("No Bluetooth Device connected..."),term.off(),this.device=void 0,this.nusService=void 0,this.txCharacteristic=void 0,this.rxCharacteristic=void 0,this.connected=!1,clearInterval(this.watcher),UI.workspace.runAbort()}handleNotifications(e){let t=e.target.value,i="";for(let s=0;s<t.byteLength;s++)i+=String.fromCharCode(t.getUint8(s));if(term.write(i),Tool.bipesVerify(),this.last4chars=this.last4chars.concat(i.substr(-4,4)).substr(-4,4),this.last4chars.includes(">>> ")){if(UI.workspace.runButton.status=!0,UI.workspace.runButton.dom.className="icon",UI.workspace.toolbarButton.className="icon medium",this.completeBufferCallback.length>0){try{this.completeBufferCallback[0]()}catch(c){UI.notify.log(c)}this.completeBufferCallback.shift()}}else!0==UI.workspace.runButton.status&&UI.workspace.receiving();Files.received_string=Files.received_string.concat(i)}}