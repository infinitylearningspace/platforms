let UPythonClass={};Blockly.Python.project_metadata=function(n){var t=Blockly.Python.valueToCode(n,"project_author",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"project_iot_id",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"project_description",Blockly.Python.ORDER_ATOMIC),i="#Code automatically generated by (https://www.infinitylearningspace.com) and is based on BIPES";return i+="\n#Author: "+t,i+="\n#IOT ID: "+e,i+="\n#Description: "+o+"\n"},Blockly.Python.delay_old=function(n){var t=Blockly.Python.valueToCode(n,"time",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_time="import time","time.sleep("+t+")\n"},Blockly.Python.reset=function(n){return Blockly.Python.definitions_.import_machine="import machine","machine.reset()\n"},Blockly.Python.reset_cause_soft=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.SOFT_RESET",Blockly.Python.ORDER_NONE]},Blockly.Python.reset_cause_hard=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.HARD_RESET",Blockly.Python.ORDER_NONE]},Blockly.Python.reset_cause_wdt=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.WDT_RESET",Blockly.Python.ORDER_NONE]},Blockly.Python.reset_cause_deep=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.DEEPSLEEP_RESET",Blockly.Python.ORDER_NONE]},Blockly.Python.webrepl_start=function(n){return Blockly.Python.definitions_.import_webrepl="import webrepl","webrepl.start()\n"},Blockly.Python.webrepl_setup=function(n){return"import webrepl_setup\n"},Blockly.Python.gpio_set=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC),o=t.replace("(","").replace(")","");if("ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_board="import board",Blockly.Python.definitions_.import_digitalio_dir="from digitalio import DigitalInOut, Direction, Pull",Blockly.Python.definitions_["gpio_set"+t]="try:\n	gpio"+o+".deinit()\nexcept:\n	pass\ngpio"+o+"=DigitalInOut(board.IO"+o+")\ngpio"+o+".direction = Direction.OUTPUT";var i="gpio"+o+".value="+e+"\n"}else{Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.gpio_set="def gpio_set(pin,value):\n  if value >= 1:\n    Pin(pin, Pin.OUT).on()\n  else:\n    Pin(pin, Pin.OUT).off()";var i="gpio_set("+t+", "+e+")\n"}return i},Blockly.Python.exec_python=function(n){return Blockly.Python.valueToCode(n,"command",Blockly.Python.ORDER_ATOMIC).replace("'","").replace("'","")+"\n"},Blockly.Python.set_freq=function(n){var t;return Blockly.Python.definitions_.import_machine="import machine","machine.freq("+Blockly.Python.valueToCode(n,"freq",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.get_freq=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.freq()",Blockly.Python.ORDER_NONE]},Blockly.Python.exec_python_output=function(n){return Blockly.Python.valueToCode(n,"command",Blockly.Python.ORDER_ATOMIC),[Blockly.Python.valueToCode(n,"command",Blockly.Python.ORDER_ATOMIC).replace("'","").replace("'",""),Blockly.Python.ORDER_NONE]},Blockly.Python.run_cmd=function(n){var t=Blockly.Python.valueToCode(n,"command",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_os="import os","os.system("+t+")\n"},Blockly.Python.play_mp3=function(n){var t=Blockly.Python.valueToCode(n,"command",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_os="import os";var e="os.system('mpg123 "+t+"')",e="os.system('mpg123 "+t.replace("'","").replace("'","")+"') \n";return e},Blockly.Python.esp32_adc=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=t.replace("(","").replace(")",""),o=n.getFieldValue("Attenuation"),i=n.getFieldValue("Width: "),r="ADC.ATTN_0DB";0==o&&(r="ADC.ATTN_0DB"),1==o&&(r="ADC.ATTN_2_5DB"),2==o&&(r="ADC.ATTN_6DB"),3==o&&(r="ADC.ATTN_11DB");var a="ADC.WIDTH_10BIT";0==i&&(a="ADC.WIDTH_9BIT"),1==i&&(a="ADC.WIDTH_10BIT"),2==i&&(a="ADC.WIDTH_11BIT"),3==i&&(a="ADC.WIDTH_12BIT");var e=t.replace("(","").replace(")","");if("ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_board="import board",Blockly.Python.definitions_.import_analogio="from analogio import AnalogIn",Blockly.Python.definitions_["analogIn"+e]="try:\n	analogIn"+e+".deinit()\nexcept:\n	pass\nanalogIn"+e+"=AnalogIn(board.IO"+e+")\n";var u="analogIn"+e+".value"}else{Blockly.Python.definitions_.import_adc="from machine import ADC",Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_["init_adc"+e]="adc"+e+"=ADC(Pin("+e+"))\nadc"+e+".atten("+r+")\nadc"+e+".width("+a+")\n";var u="adc"+e+".read()"}return[u,Blockly.Python.ORDER_NONE]},Blockly.Python.adc_pico=function(n){Blockly.Python.definitions_.import_adc="from machine import ADC",Blockly.Python.definitions_.import_pin="from machine import Pin";var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC).replace("(","").replace(")","");return Blockly.Python.definitions_["init_adc"+t]="adc"+t+"=ADC("+t+")",["adc"+t+".read_u16()",Blockly.Python.ORDER_NONE]},Blockly.Python.adc=function(n){Blockly.Python.definitions_.import_adc="from machine import ADC";var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_[`init_adc_${t}`]="adc"+t+"=ADC("+t+")",["adc"+t+".read()",Blockly.Python.ORDER_NONE]},Blockly.Python.gpio_get=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"pullup",Blockly.Python.ORDER_ATOMIC),o=t.replace("(","").replace(")","");if("True"==e?(pTmp="gpio"+o+".pull = Pull.UP\n",pUpDown=", Pin.PULL_UP"):(pTmp="",pUpDown=""),"ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_board="import board",Blockly.Python.definitions_.import_digitalio_dir="from digitalio import DigitalInOut, Direction, Pull",Blockly.Python.definitions_["gpio_set"+t]="try:\n	gpio"+o+".deinit()\nexcept:\n	pass\ngpio"+o+"=DigitalInOut(board.IO"+o+")\ngpio"+o+".direction = Direction.INPUT\n"+pTmp;var i="gpio"+o+".value"}else{Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_[`gpio_get_${o}`]="pIn"+o+"=Pin("+o+", Pin.IN"+pUpDown+")\n\n";var i="pIn"+o+".value()"}return[i,Blockly.Python.ORDER_NONE]},Blockly.Python.gpio_interrupt=function(n){for(var t,e=[],o=n.workspace,i=Blockly.Variables.allUsedVarModels(o)||[],r=0;t=i[r];r++){var a=t.name;-1==n.getVars().indexOf(a)&&e.push(Blockly.Python.nameDB_.getName(a,Blockly.VARIABLE_CATEGORY_NAME))}e=e.length?Blockly.Python.INDENT+"global "+e.join(", ")+"\n":"";var u=n.getFieldValue("trigger"),h=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),s=Blockly.Python.statementToCode(n,"code"),h=h.replace("(","").replace(")","");Blockly.Python.definitions_.import_pin="from machine import Pin","BOTH"==u&&(u="IRQ_RISING | Pin.IRQ_FALLING");var l="";return h&&(Blockly.Python.definitions_[`gpio_interrupt${h}`]=`
#Interrupt handler
def callback${h}(pPin):
${e}${s}

`,l=`p${h} = Pin(${h}, Pin.IN)
`,l+=`p${h}.irq(trigger=Pin.${u}, handler=callback${h})
`),l},Blockly.Python.gpio_interrupt_off=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),t=t.replace("(","").replace(")",""),e="";return t&&(e="p"+t+".irq(trigger=0, handler=callback"+t+")\n"),e},Blockly.Python.pinout=function(n){return[n.getFieldValue("PIN"),Blockly.Python.ORDER_NONE]},Blockly.Python.text_to_str=function(n){var t;return["str("+Blockly.Python.valueToCode(n,"var",Blockly.Python.ORDER_ATOMIC)+")",Blockly.Python.ORDER_NONE]},Blockly.Python.decode_bytes_to_text=function(n){var t;return[Blockly.Python.valueToCode(n,"var",Blockly.Python.ORDER_ATOMIC)+".decode()",Blockly.Python.ORDER_NONE]},Blockly.Python.var_to_int=function(n){var t;return["int("+Blockly.Python.valueToCode(n,"var",Blockly.Python.ORDER_ATOMIC)+")",Blockly.Python.ORDER_NONE]},Blockly.Python.var_to_float=function(n){var t;return["float("+Blockly.Python.valueToCode(n,"var",Blockly.Python.ORDER_ATOMIC)+")",Blockly.Python.ORDER_NONE]},Blockly.Python.onewire_ds18x20_init=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_onewire="import onewire,ds18x20";var e="onewire_pin = Pin("+t+")\n";return e+"ds = ds18x20.DS18X20(onewire.OneWire(onewire_pin))\n"},Blockly.Python.onewire_ds18x20_scan=function(n){return["ds.scan()",Blockly.Python.ORDER_NONE]},Blockly.Python.onewire_ds18x20_convert=function(n){return"ds.convert_temp()\n"},Blockly.Python.onewire_ds18x20_read_temp=function(n){var t;return["ds.read_temp("+Blockly.Python.valueToCode(n,"rom",Blockly.Python.ORDER_ATOMIC)+")",Blockly.Python.ORDER_NONE]},Blockly.Python.init_mpu6050=function(n){return Blockly.Python.valueToCode(n,"scl",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"sda",Blockly.Python.ORDER_ATOMIC),Blockly.Python.definitions_.import_imu="from mpu import imu",Blockly.Python.definitions_.import_mpu="from mpu import mpu6500","imu.init_MPU()\nimu.calibrate_sensors()\n"},Blockly.Python.mpu6050_read_acc_x=function(n){return["imu.read_mpu6050v(1)",Blockly.Python.ORDER_NONE]},Blockly.Python.mpu6050_read_acc_y=function(n){return["imu.read_mpu6050v(2)",Blockly.Python.ORDER_NONE]},Blockly.Python.mpu6050_read_acc_z=function(n){return["imu.read_mpu6050v(3)",Blockly.Python.ORDER_NONE]},Blockly.Python.mpu6050_read_gyro_x=function(n){return["imu.read_mpu6050v(4)",Blockly.Python.ORDER_NONE]},Blockly.Python.mpu6050_read_gyro_y=function(n){return["imu.read_mpu6050v(5)",Blockly.Python.ORDER_NONE]},Blockly.Python.mpu6050_read_gyro_z=function(n){return["imu.read_mpu6050v(6)",Blockly.Python.ORDER_NONE]},Blockly.Python.init_oled=function(n){var t=Blockly.Python.valueToCode(n,"scl",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"sda",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"i2c",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_oled_a="from machine import I2C",Blockly.Python.definitions_.import_ssd="from oled import ssd1306",Blockly.Python.definitions_.import_sleep="from time import sleep";var i="i2c=I2C("+o+", scl=Pin("+t+"), sda=Pin("+e+"))\n";return i+="oled_width = 128\n",i+="oled_height = 64\n",i+="oled = ssd1306.SSD1306_I2C(oled_width, oled_height, i2c)\n"},Blockly.Python.clear_oled=function(n){return"oled.fill(0)\n"},Blockly.Python.fill_oled=function(n){var t;return"oled.fill("+Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.show_oled=function(n){return"oled.show()\n"},Blockly.Python.write_oled=function(n){var t,e=Blockly.Python.valueToCode(n,"x",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"y",Blockly.Python.ORDER_ATOMIC);return"oled.text("+Blockly.Python.valueToCode(n,"text",Blockly.Python.ORDER_ATOMIC)+", "+e+", "+o+")\noled.show()\n"},Blockly.Python.write_oled_int=function(n){var t,e=Blockly.Python.valueToCode(n,"x",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"y",Blockly.Python.ORDER_ATOMIC);return"oled.text(str("+Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC)+"), "+e+", "+o+")\n"},Blockly.Python.init_tank=function(n){var t=Blockly.Python.valueToCode(n,"Xpos",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"Ypos",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"Angle",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_tank="import tank","tank1 = tank.Tank("+t+","+e+","+o+", oled, oled_width, oled_height, i2c)   # uses 3 variables; X position, Y position, Start Angle\n"},Blockly.Python.tank_move=function(n){var t=n.getFieldValue("option"),e=Blockly.Python.valueToCode(n,"Move",Blockly.Python.ORDER_ATOMIC),o="tank1.move("+e+", 1)\n";return"TankPrime"===t?o="tank1.move("+e+", 2)\n":"TankJump"===t&&(o="tank1.move("+e+", 0)\n"),o},Blockly.Python.tank_turn=function(n){var t;return"tank1.turn("+n.getFieldValue("Tank_Angle")+")\n"},Blockly.Python.init_servo=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=n.getFieldValue("servo_name");return Blockly.Python.definitions_.import_pwm="from machine import PWM",Blockly.Python.definitions_.import_pin="from machine import Pin",e+" = PWM(Pin("+t+"), freq=50)\n"},Blockly.Python.move_servo=function(n){var t,e=Blockly.Python.valueToCode(n,"angle",Blockly.Python.ORDER_ATOMIC);return n.getFieldValue("servo_name")+".duty("+("int(30 + ("+e)+" / 180) * (125 - 30)))\n"},Blockly.Python.net_get_request=function(n){var t=Blockly.Python.valueToCode(n,"URL",Blockly.Python.ORDER_ATOMIC);if("ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_ipaddress="import ipaddress",Blockly.Python.definitions_.import_ssl="import ssl",Blockly.Python.definitions_.import_wifi="import wifi",Blockly.Python.definitions_.import_socketpool="import socketpool",Blockly.Python.definitions_.import_http_get='def http_get(pHOST):\n	tmp=pHOST.replace("http://", "")\n	HOST=tmp.split("/", 1)[0]\n	params=tmp.split("/",1)[1]\n	print("Host: " + HOST)\n	print("Params = " + params)\n	pool = socketpool.SocketPool(wifi.radio)\n	server_ipv4 = ipaddress.ip_address(pool.getaddrinfo(HOST, 80)[0][4][0])\n	print("Server ping", server_ipv4, wifi.radio.ping(server_ipv4), "ms")\n	buf = bytearray(500)\n	s = pool.socket(pool.AF_INET, pool.SOCK_STREAM)\n	s.settimeout(50)\n	print("Connecting")\n	s.connect((HOST, 80))\n	size = s.send(bytes(\'GET /%s HTTP/1.0\\r\\nHost: %s\\r\\n\\r\\n\' % (params, HOST), \'utf8\'))\n	print("Sent", size, "bytes")\n	size = s.recv_into(buf)\n	print(\'Received\', size, "bytes", buf[:size])\n	s.close()\n	return buf[:size]\n';var e="http_get("+t+")\n"}else{Blockly.Python.definitions_.import_urequests="import urequests";var e="urequests.get("+t+")\n"}return[e,Blockly.Python.ORDER_NONE]},Blockly.Python.net_post_request=function(n){var t=Blockly.Python.valueToCode(n,"URL",Blockly.Python.ORDER_ATOMIC),t=Blockly.Python.valueToCode(n,"URL",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_urequests="import urequests",['urequests.post("'+t+'", data = "'+t+'")\n',Blockly.Python.ORDER_NONE]},Blockly.Python.net_ifconfig=function(n){if("ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_ipaddress="import ipaddress",Blockly.Python.definitions_.import_ssl="import ssl",Blockly.Python.definitions_.import_wifi="import wifi",Blockly.Python.definitions_.import_socketpool="import socketpool";var t="wifi.radio.ipv4_address"}else{Blockly.Python.definitions_.import_network="import network",Blockly.Python.definitions_.import_network_a="sta_if = network.WLAN(network.STA_IF)",Blockly.Python.definitions_.import_network_b="sta_if.active(True)";var t="sta_if.ifconfig()"}return[t,Blockly.Python.ORDER_NONE]},Blockly.Python.net_ap_mode=function(n){var t=Blockly.Python.valueToCode(n,"wifi_essid",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"wifi_key",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_network="import network","ap = network.WLAN(network.AP_IF) \nap.active(True) \nap.config(essid="+t+", password="+e+") \n"},Blockly.Python.ble_setup=function(n){return Blockly.Python.valueToCode(n,"ble_essid",Blockly.Python.ORDER_ATOMIC),Blockly.Python.definitions_.import_network="import network",Blockly.Python.definitions_.import_time="import time",""},Blockly.Python.wifi_client_connect=function(n){var t=Blockly.Python.valueToCode(n,"wifi_client_essid",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"wifi_client_key",Blockly.Python.ORDER_ATOMIC);if("ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_ipaddress="import ipaddress",Blockly.Python.definitions_.import_ssl="import ssl",Blockly.Python.definitions_.import_wifi="import wifi",Blockly.Python.definitions_.import_socketpool="import socketpool";var o='print("Connecting to '+t+'")\n';o+="wifi.radio.connect("+t+","+e+")\n",o+='print("Connected")\n',o+='print("My IP address is", wifi.radio.ipv4_address)\n\n'}else{Blockly.Python.definitions_.import_network="import network",Blockly.Python.definitions_.import_time="import time";var o="sta_if = network.WLAN(network.STA_IF); sta_if.active(True) \nsta_if.scan() \nsta_if.connect("+t+","+e+') \nprint("Waiting for Wifi connection")\nwhile not sta_if.isconnected(): time.sleep(1)\nprint("Connected")\n'}return o},Blockly.Python.wifi_client_scan_networks=function(n){if("ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_ipaddress="import ipaddress",Blockly.Python.definitions_.import_ssl="import ssl",Blockly.Python.definitions_.import_wifi="import wifi",Blockly.Python.definitions_.import_socketpool="import socketpool",Blockly.Python.definitions_.import_scan_wifi='def scan_wifi():\n	for network in wifi.radio.start_scanning_networks():\n		print("	%s		RSSI: %d	Channel: %d" % (str(network.ssid, "utf-8"), network.rssi, network.channel))\n	wifi.radio.stop_scanning_networks()\n';var t="scan_wifi()"}else{Blockly.Python.definitions_.import_network="import network",Blockly.Python.definitions_.import_network_sta_init="sta_if = network.WLAN(network.STA_IF); sta_if.active(True) \n";var t="sta_if.scan()"}return[t,Blockly.Python.ORDER_NONE]},Blockly.Python.joy_init=function(n){var t=Blockly.Python.valueToCode(n,"xpin",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"ypin",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"button1",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"xcenter",Blockly.Python.ORDER_ATOMIC),r=Blockly.Python.valueToCode(n,"ycenter",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_pin="from machine import Pin, ADC",Blockly.Python.definitions_.import_joy="from joystick import Joystick",Blockly.Python.definitions_.import_time="import time","js = Joystick(x_pin="+t+", y_pin="+e+", btn_pin="+o+", x_center="+i+", y_center="+r+")\n"},Blockly.Python.joy_update=function(n){return"js.read()\n"},Blockly.Python.joy_read=function(n){return["js.get_direction()",Blockly.Python.ORDER_NONE]},Blockly.Python.joy_button=function(n){return["js.was_pressed()",Blockly.Python.ORDER_NONE]},Blockly.Python.dht_init=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=n.getFieldValue("DHT_TYPE");Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_dht="import dht",Blockly.Python.definitions_.import_time="import time";var o="dhts = dht."+e+"(Pin("+t+"))\n";return o+="time.sleep(2)  # Aguardar tempo para estabilizar o sensor\n",o+="try:\n",o+="    dhts.measure()  # Primeira leitura que ser\xe1 ignorada\n",o+="except OSError as e:\n",o+='    print("Primeira leitura ignorada devido a erro:", e)\n',o+="time.sleep(5)\n"},Blockly.Python.dht_measure=function(n){return"dhts.measure()\n"},Blockly.Python.dht_read_temp=function(n){return["dhts.temperature()",Blockly.Python.ORDER_NONE]},Blockly.Python.dht_read_humidity=function(n){return["dhts.humidity()",Blockly.Python.ORDER_NONE]},Blockly.Python.max7219_init=function(n){var t=Blockly.Python.valueToCode(n,"clk",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"dio",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"cs",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"count",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_pin="from machine import SPI, Pin",Blockly.Python.definitions_.import_const="from micropython import const",Blockly.Python.definitions_.import_max7219="from ledmatrix import Matrix8x8";var r="max_clk = const("+t+")\n";return r+="max_cs = const("+o+")\n",r+="max_din = const("+e+")\n",r+="max_count = const("+i+")\n",r+="spi = SPI(1, baudrate=10000000, polarity=1, phase=0, sck=Pin(max_clk), mosi=Pin(max_din))\n",r+="display = Matrix8x8(spi, Pin(max_cs), max_count)\n"},Blockly.Python.max7219_write=function(n){var t;return"display.text("+Blockly.Python.valueToCode(n,"text",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.max7219_scroll=function(n){var t=Blockly.Python.valueToCode(n,"text",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"delay",Blockly.Python.ORDER_ATOMIC);return"display.scroll_text("+t+","+e+")\n"},Blockly.Python.max7219_brig=function(n){var t;return"display.brightness(max(1, min(15, int(1 + ("+Blockly.Python.valueToCode(n,"brig",Blockly.Python.ORDER_ATOMIC)+" * 14 / 100)))))\n"},Blockly.Python.max7219_num=function(n){var t;return"display.number("+Blockly.Python.valueToCode(n,"num",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.max7219_custom=function(n){var t="TRUE"==n.getFieldValue("A0"),e="TRUE"==n.getFieldValue("A1"),o="TRUE"==n.getFieldValue("A2"),i="TRUE"==n.getFieldValue("A3"),r="TRUE"==n.getFieldValue("A4"),a="TRUE"==n.getFieldValue("A5"),u="TRUE"==n.getFieldValue("A6"),h="TRUE"==n.getFieldValue("A7"),s="TRUE"==n.getFieldValue("B0"),l="TRUE"==n.getFieldValue("B1"),y="TRUE"==n.getFieldValue("B2"),c="TRUE"==n.getFieldValue("B3"),P="TRUE"==n.getFieldValue("B4"),p="TRUE"==n.getFieldValue("B5"),d="TRUE"==n.getFieldValue("B6"),m="TRUE"==n.getFieldValue("B7"),R="TRUE"==n.getFieldValue("C0"),f="TRUE"==n.getFieldValue("C1"),O="TRUE"==n.getFieldValue("C2"),T="TRUE"==n.getFieldValue("C3"),C="TRUE"==n.getFieldValue("C4"),v="TRUE"==n.getFieldValue("C5"),E="TRUE"==n.getFieldValue("C6"),I="TRUE"==n.getFieldValue("C7"),D="TRUE"==n.getFieldValue("D0"),A="TRUE"==n.getFieldValue("D1"),b="TRUE"==n.getFieldValue("D2"),g="TRUE"==n.getFieldValue("D3"),M="TRUE"==n.getFieldValue("D4"),N="TRUE"==n.getFieldValue("D5"),$="TRUE"==n.getFieldValue("D6"),w="TRUE"==n.getFieldValue("D7"),F="TRUE"==n.getFieldValue("E0"),k="TRUE"==n.getFieldValue("E1"),_="TRUE"==n.getFieldValue("E2"),S="TRUE"==n.getFieldValue("E3"),V="TRUE"==n.getFieldValue("E4"),x="TRUE"==n.getFieldValue("E5"),L="TRUE"==n.getFieldValue("E6"),q="TRUE"==n.getFieldValue("E7"),U="TRUE"==n.getFieldValue("F0"),B="TRUE"==n.getFieldValue("F1"),W="TRUE"==n.getFieldValue("F2"),J="TRUE"==n.getFieldValue("F3"),G="TRUE"==n.getFieldValue("F4"),H="TRUE"==n.getFieldValue("F5"),j="TRUE"==n.getFieldValue("F6"),z="TRUE"==n.getFieldValue("F7"),Y="TRUE"==n.getFieldValue("G0"),Q="TRUE"==n.getFieldValue("G1"),K="TRUE"==n.getFieldValue("G2"),X="TRUE"==n.getFieldValue("G3"),Z="TRUE"==n.getFieldValue("G4"),nn="TRUE"==n.getFieldValue("G5"),nt="TRUE"==n.getFieldValue("G6"),ne="TRUE"==n.getFieldValue("G7"),no="TRUE"==n.getFieldValue("H0"),ni="TRUE"==n.getFieldValue("H1"),nr="TRUE"==n.getFieldValue("H2"),na="TRUE"==n.getFieldValue("H3"),nu="TRUE"==n.getFieldValue("H4"),nh="TRUE"==n.getFieldValue("H5"),n8="TRUE"==n.getFieldValue("H6"),ns="TRUE"==n.getFieldValue("H7"),nl="matrix = [\n";return nl+="	["+Number(t)+","+Number(e)+","+Number(o)+","+Number(i)+","+Number(r)+","+Number(a)+","+Number(u)+","+Number(h)+"],\n",nl+="	["+Number(s)+","+Number(l)+","+Number(y)+","+Number(c)+","+Number(P)+","+Number(p)+","+Number(d)+","+Number(m)+"],\n",nl+="	["+Number(R)+","+Number(f)+","+Number(O)+","+Number(T)+","+Number(C)+","+Number(v)+","+Number(E)+","+Number(I)+"],\n",nl+="	["+Number(D)+","+Number(A)+","+Number(b)+","+Number(g)+","+Number(M)+","+Number(N)+","+Number($)+","+Number(w)+"],\n",nl+="	["+Number(F)+","+Number(k)+","+Number(_)+","+Number(S)+","+Number(V)+","+Number(x)+","+Number(L)+","+Number(q)+"],\n",nl+="	["+Number(U)+","+Number(B)+","+Number(W)+","+Number(J)+","+Number(G)+","+Number(H)+","+Number(j)+","+Number(z)+"],\n",nl+="	["+Number(Y)+","+Number(Q)+","+Number(K)+","+Number(X)+","+Number(Z)+","+Number(nn)+","+Number(nt)+","+Number(ne)+"],\n",nl+="	["+Number(no)+","+Number(ni)+","+Number(nr)+","+Number(na)+","+Number(nu)+","+Number(nh)+","+Number(n8)+","+Number(ns)+"]\n",nl+="]\n",nl+="display.glyphArray(matrix)\n"},Blockly.Python.max7219_show=function(n){return"display.show()\n"},Blockly.Python.max7219_shutdown=function(n){return"display.shutdown()\n"},Blockly.Python.max7219_wake=function(n){return"display.wake()\n"},Blockly.Python.max7219_clear=function(n){return"display.zero()\n"},Blockly.Python.tm1637_init=function(n){var t=Blockly.Python.valueToCode(n,"clk",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"dio",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_tm1637="from led import tm1637";var o="max_clk = const("+t+")\n";return o+="max_din = const("+e+")\n",o+="display = tm1637.TM1637(clk=Pin(max_clk), dio=Pin(max_din))\n"},Blockly.Python.tm1637_write=function(n){var t;return"display.show("+Blockly.Python.valueToCode(n,"text",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.tm1637_scroll=function(n){var t=Blockly.Python.valueToCode(n,"text",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"delay",Blockly.Python.ORDER_ATOMIC);return"display.scroll("+t+","+e+")\n"},Blockly.Python.tm1637_brig=function(n){var t;return"display.brightness(max(1, min(7, int(1 + ("+Blockly.Python.valueToCode(n,"brig",Blockly.Python.ORDER_ATOMIC)+" * 6 / 100)))))\n"},Blockly.Python.tm1637_clear=function(n){return"display.show('')\n"},Blockly.Python.tm1637_temp=function(n){var t;return"display.temperature("+Blockly.Python.valueToCode(n,"temp",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.tm1637_time=function(n){var t=Blockly.Python.valueToCode(n,"hrs",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"mns",Blockly.Python.ORDER_ATOMIC);return"display.show('{:>2d}{:02d}'.format("+t+","+e+"), colon=False)\n"},Blockly.Python.relay_switch=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=n.getFieldValue("RELAY_STATUS");if(Blockly.Python.definitions_.import_pin="from machine import Pin","1"==e)var o="Pin("+t+", Pin.OUT).off()\n";else var o="Pin("+t+", Pin.OUT).on()\n";return o},Blockly.Python.easymqtt_init=function(n){var t=n.getFieldValue("EASYMQTT_SESSION_ID");return window.easyMQTT_session=t,Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust",'easymqtt_session = "'+t+'"; \neasymqtt_client = umqtt.robust.MQTTClient("umqtt_client", server = "bipes.net.br", port = 1883, user = "bipes", password = "m8YLUr5uW3T"); \neasymqtt_client.connect()\nprint("EasyMQTT connected")\n'},Blockly.Python.easymqtt_publish_data=function(n){var t=Blockly.Python.valueToCode(n,"topic",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"data",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust",'easymqtt_client.publish(easymqtt_session + "/" + '+t+", str("+e+'))\nprint("EasyMQTT Publish - Session:",easymqtt_session,"Topic:",'+t+',"Value:",str('+e+"))\n"},Blockly.Python.easymqtt_disconnect=function(n){return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust",'easymqtt_client.disconnect()\nprint("EasyMQTT disconnected")\n'},Blockly.Python.easymqtt_subscribe=function(n){for(var t,e,o=Blockly.Python.nameDB_.getName(n.getFieldValue("EASYMQTT_VAR"),Blockly.VARIABLE_CATEGORY_NAME),i=[],r=n.workspace,a=Blockly.Variables.allUsedVarModels(r)||[],u=0;e=a[u];u++)t=e.name,-1==n.getVars().indexOf(t)&&t!=o&&i.push(Blockly.Python.nameDB_.getName(t,Blockly.VARIABLE_CATEGORY_NAME));for(var h=Blockly.Variables.allDeveloperVariables(r),u=0;u<h.length;u++)i.push(Blockly.Python.nameDB_.getName(h[u],Blockly.Names.DEVELOPER_VARIABLE_TYPE));i=i.length?Blockly.Python.INDENT+"global "+i.join(", ")+"\n":"",Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust";var s=Blockly.Python.valueToCode(n,"topic",Blockly.Python.ORDER_ATOMIC),l=Blockly.Python.statementToCode(n,"do"),y=s.replace(/\W/g,"_"),c=Blockly.Python.provideFunction_("easymqtt"+y,["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"("+o+"):",i,l]);return Blockly.Python.definitions_.easymqtt_callback="easymqtt_callback_list = {}\ndef easymqtt_callback(topic_,msg_):\n  topic_=topic_.decode();msg_=msg_.decode()\n  if topic_ in easymqtt_callback_list: easymqtt_callback_list[topic_](float(msg_))","easymqtt_client.set_callback(easymqtt_callback)\neasymqtt_callback_list['"+window.easyMQTT_session+"/' + "+s+"]="+c+"\neasymqtt_client.subscribe('"+window.easyMQTT_session+"/' + "+s+")\n"},Blockly.Python.easymqtt_receive_data=function(n){if(Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust","1"==n.getFieldValue("EASYMQTT_WAIT"))var t="easymqtt_client.wait_msg()\n";else var t="easymqtt_client.check_msg()\n";return t},Blockly.Python.mqtt_add_to_buffer=function(n){var t=Blockly.Python.valueToCode(n,"fieldname",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC);return"mqtt_buffer += ("+t+' + "=" + str('+e+')) if not len(mqtt_buffer) else ("&" + '+t+' + "=" + str('+e+"))\n"},Blockly.Python.mqtt_init=function(n){var t=Blockly.Python.valueToCode(n,"server",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"port",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"user",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"password",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust",'mqtt_buffer = ""; mqtt_client = umqtt.robust.MQTTClient("umqtt_client", server = '+t+", port = "+e+", user = "+o+", password = "+i+"); mqtt_client.connect()\n"},Blockly.Python.mqtt_add_to_buffer=function(n){var t=Blockly.Python.valueToCode(n,"fieldname",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC);return"mqtt_buffer += ("+t+' + "=" + str('+e+')) if not len(mqtt_buffer) else ("&" + '+t+' + "=" + str('+e+"))\n"},Blockly.Python.mqtt_publish_buffer=function(n){var t=Blockly.Python.valueToCode(n,"topic",Blockly.Python.ORDER_ATOMIC),e=n.getFieldValue("MQTT_QOS");return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust","mqtt_client.publish("+t+", mqtt_buffer,qos="+e+'); mqtt_buffer = ""\n'},Blockly.Python.mqtt_publish_payload=function(n){var t=Blockly.Python.valueToCode(n,"topic",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"payload",Blockly.Python.ORDER_ATOMIC),o=n.getFieldValue("MQTT_QOS");return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust","mqtt_client.publish("+t+", "+e+",qos="+o+")\n"},Blockly.Python.mqtt_set_callback=function(n){for(var t,e,o=Blockly.Python.nameDB_.getName(n.getFieldValue("MQTT_DATA_VAR"),Blockly.VARIABLE_CATEGORY_NAME),i=Blockly.Python.nameDB_.getName(n.getFieldValue("MQTT_TOPIC_VAR"),Blockly.VARIABLE_CATEGORY_NAME),r=[],a=n.workspace,u=Blockly.Variables.allUsedVarModels(a)||[],h=0;e=u[h];h++)t=e.name,-1==n.getVars().indexOf(t)&&t!=o&&t!=i&&r.push(Blockly.Python.nameDB_.getName(t,Blockly.VARIABLE_CATEGORY_NAME));for(var s=Blockly.Variables.allDeveloperVariables(a),h=0;h<s.length;h++)r.push(Blockly.Python.nameDB_.getName(s[h],Blockly.Names.DEVELOPER_VARIABLE_TYPE));r=r.length?Blockly.Python.INDENT+"global "+r.join(", "):"",Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust";var l,y=Blockly.Python.statementToCode(n,"do");return"mqtt_client.set_callback("+Blockly.Python.provideFunction_("mqtt_callback",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"("+i+","+o+"):",r,Blockly.Python.INDENT+i+" = "+i+".decode()",y])+")\n"},Blockly.Python.mqtt_subscribe=function(n){var t=Blockly.Python.valueToCode(n,"topic",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust","mqtt_client.subscribe("+t+")\n"},Blockly.Python.mqtt_check_msg=function(n){return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust","mqtt_client.check_msg()\n"},Blockly.Python.mqtt_wait_msg=function(n){return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust","mqtt_client.wait_msg()\n"},Blockly.Python.mqtt_disconnect=function(n){return Blockly.Python.definitions_["import_umqtt.robust"]="import umqtt.robust","mqtt_client.disconnect()\n"},Blockly.Python.btree_open=function(n){var t;return"btree.open("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["btree_btree.close"]=function(n){return Blockly.Python.definitions_.import_btree="import btree","btree.btree.close()\n"},Blockly.Python["btree_btree.flush"]=function(n){return Blockly.Python.definitions_.import_btree="import btree","btree.btree.flush()\n"},Blockly.Python["btree_btree.__getitem__"]=function(n){var t;return"btree.btree.__getitem__("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["btree_btree.__iter__"]=function(n){return Blockly.Python.definitions_.import_btree="import btree","btree.btree.__iter__()\n"},Blockly.Python["btree_btree.keys"]=function(n){var t;return"btree.btree.keys("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.builtins_abs=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.abs()\n"},Blockly.Python.builtins_all=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.all()\n"},Blockly.Python.builtins_any=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.any()\n"},Blockly.Python.builtins_bin=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.bin()\n"},Blockly.Python.builtins_callable=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.callable()\n"},Blockly.Python.builtins_chr=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.chr()\n"},Blockly.Python.builtins_classmethod=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.classmethod()\n"},Blockly.Python.builtins_compile=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.compile()\n"},Blockly.Python.builtins_delattr=function(n){var t;return"builtins.delattr("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.builtins_dir=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.dir()\n"},Blockly.Python.builtins_divmod=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.divmod()\n"},Blockly.Python.builtins_enumerate=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.enumerate()\n"},Blockly.Python.builtins_eval=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.eval()\n"},Blockly.Python.builtins_exec=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.exec()\n"},Blockly.Python.builtins_filter=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.filter()\n"},Blockly.Python.builtins_getattr=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.getattr()\n"},Blockly.Python.builtins_globals=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.globals()\n"},Blockly.Python.builtins_hasattr=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.hasattr()\n"},Blockly.Python.builtins_hash=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.hash()\n"},Blockly.Python.builtins_hex=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.hex()\n"},Blockly.Python.builtins_id=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.id()\n"},Blockly.Python.builtins_input=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.input()\n"},Blockly.Python.builtins_to_bytes=function(n){var t;return"builtins.to_bytes("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.builtins_isinstance=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.isinstance()\n"},Blockly.Python.builtins_issubclass=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.issubclass()\n"},Blockly.Python.builtins_iter=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.iter()\n"},Blockly.Python.builtins_len=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.len()\n"},Blockly.Python.builtins_locals=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.locals()\n"},Blockly.Python.builtins_map=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.map()\n"},Blockly.Python.builtins_max=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.max()\n"},Blockly.Python.builtins_min=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.min()\n"},Blockly.Python.builtins_next=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.next()\n"},Blockly.Python.builtins_oct=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.oct()\n"},Blockly.Python.builtins_open=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.open()\n"},Blockly.Python.builtins_ord=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.ord()\n"},Blockly.Python.builtins_pow=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.pow()\n"},Blockly.Python.builtins_print=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.print()\n"},Blockly.Python.builtins_property=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.property()\n"},Blockly.Python.builtins_range=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.range()\n"},Blockly.Python.builtins_repr=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.repr()\n"},Blockly.Python.builtins_reversed=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.reversed()\n"},Blockly.Python.builtins_round=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.round()\n"},Blockly.Python.builtins_setattr=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.setattr()\n"},Blockly.Python.builtins_sorted=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.sorted()\n"},Blockly.Python.builtins_staticmethod=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.staticmethod()\n"},Blockly.Python.builtins_sum=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.sum()\n"},Blockly.Python.builtins_super=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.super()\n"},Blockly.Python.builtins_type=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.type()\n"},Blockly.Python.builtins_zip=function(n){return Blockly.Python.definitions_.import_builtins="import builtins","builtins.zip()\n"},Blockly.Python.cmath_cos=function(n){var t;return["cmath.cos("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.cmath_exp=function(n){var t;return["cmath.exp("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.cmath_log=function(n){var t;return["cmath.log("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.cmath_log10=function(n){var t;return["cmath.log10("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.cmath_phase=function(n){var t;return"cmath.phase("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.cmath_polar=function(n){var t;return"cmath.polar("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.cmath_rect=function(n){var t;return"cmath.rect("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.cmath_sin=function(n){var t;return["cmath.sin("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.cmath_sqrt=function(n){var t;return["cmath.sqrt("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.esp32_wake_on_touch=function(n){var t;return"esp32.wake_on_touch("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp32_wake_on_ext0=function(n){var t;return"esp32.wake_on_ext0("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp32_wake_on_ext1=function(n){var t;return"esp32.wake_on_ext1("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp32_raw_temperature=function(n){return Blockly.Python.definitions_.import_esp32="import esp32",["esp32.raw_temperature()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.esp32_hall_sensor=function(n){return Blockly.Python.definitions_.import_esp32="import esp32",["esp32.hall_sensor()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.esp32_idf_heap_info=function(n){var t;return"esp32.idf_heap_info("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_Partition.info"]=function(n){return Blockly.Python.definitions_.import_esp32="import esp32","esp32.Partition.info()\n"},Blockly.Python["esp32_Partition.readblocks"]=function(n){var t;return"esp32.Partition.readblocks("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_Partition.readblocks"]=function(n){var t;return"esp32.Partition.readblocks("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_Partition.writeblocks"]=function(n){var t;return"esp32.Partition.writeblocks("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_Partition.writeblocks"]=function(n){var t;return"esp32.Partition.writeblocks("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_Partition.ioctl"]=function(n){var t;return"esp32.Partition.ioctl("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_Partition.set_boot"]=function(n){return Blockly.Python.definitions_.import_esp32="import esp32","esp32.Partition.set_boot()\n"},Blockly.Python["esp32_Partition.get_next_update"]=function(n){return Blockly.Python.definitions_.import_esp32="import esp32","esp32.Partition.get_next_update()\n"},Blockly.Python["esp32_RMT.source_freq"]=function(n){return Blockly.Python.definitions_.import_esp32="import esp32","esp32.RMT.source_freq()\n"},Blockly.Python["esp32_RMT.clock_div"]=function(n){return Blockly.Python.definitions_.import_esp32="import esp32",["esp32.RMT.clock_div()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["esp32_RMT.wait_done"]=function(n){var t;return"esp32.RMT.wait_done("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_RMT.loop"]=function(n){var t;return"esp32.RMT.loop("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_RMT.write_pulses"]=function(n){var t;return"esp32.RMT.write_pulses("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_ULP.set_wakeup_period"]=function(n){var t;return"esp32.ULP.set_wakeup_period("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_ULP.load_binary"]=function(n){var t;return"esp32.ULP.load_binary("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["esp32_ULP.run"]=function(n){var t;return"esp32.ULP.run("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp_sleep_type=function(n){var t;return"esp.sleep_type("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp_deepsleep=function(n){var t;return"esp.deepsleep("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp_flash_id=function(n){return Blockly.Python.definitions_.import_esp="import esp","esp.flash_id()\n"},Blockly.Python.esp_flash_size=function(n){return Blockly.Python.definitions_.import_esp="import esp",["esp.flash_size()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.esp_flash_user_start=function(n){return Blockly.Python.definitions_.import_esp="import esp",["esp.flash_user_start()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.esp_flash_read=function(n){var t;return"esp.flash_read("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp_flash_write=function(n){var t;return"esp.flash_write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp_flash_erase=function(n){var t;return"esp.flash_erase("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.esp_set_native_code_location=function(n){var t;return"esp.set_native_code_location("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.fill"]=function(n){var t;return"framebuf.FrameBuffer.fill("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.pixel"]=function(n){var t;return"framebuf.FrameBuffer.pixel("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.hline"]=function(n){var t;return"framebuf.FrameBuffer.hline("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.vline"]=function(n){var t;return"framebuf.FrameBuffer.vline("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.line"]=function(n){var t;return"framebuf.FrameBuffer.line("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.rect"]=function(n){var t;return"framebuf.FrameBuffer.rect("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.fill_rect"]=function(n){var t;return"framebuf.FrameBuffer.fill_rect("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.text"]=function(n){var t;return"framebuf.FrameBuffer.text("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.scroll"]=function(n){var t;return"framebuf.FrameBuffer.scroll("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["framebuf_FrameBuffer.blit"]=function(n){var t;return"framebuf.FrameBuffer.blit("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.gc_enable=function(n){return Blockly.Python.definitions_.import_gc="import gc","gc.enable()\n"},Blockly.Python.gc_disable=function(n){return Blockly.Python.definitions_.import_gc="import gc","gc.disable()\n"},Blockly.Python.gc_collect=function(n){return Blockly.Python.definitions_.import_gc="import gc","gc.collect()\n"},Blockly.Python.gc_mem_alloc=function(n){return Blockly.Python.definitions_.import_gc="import gc",["gc.mem_alloc()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.gc_mem_free=function(n){return Blockly.Python.definitions_.import_gc="import gc",["gc.mem_free()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.gc_threshold=function(n){var t;return"gc.threshold("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_power"]=function(n){var t;return"lcd160cr.LCD160CR.set_power("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_orient"]=function(n){var t;return"lcd160cr.LCD160CR.set_orient("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_brightness"]=function(n){var t;return"lcd160cr.LCD160CR.set_brightness("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_i2c_addr"]=function(n){var t;return"lcd160cr.LCD160CR.set_i2c_addr("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_uart_baudrate"]=function(n){var t;return"lcd160cr.LCD160CR.set_uart_baudrate("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_startup_deco"]=function(n){var t;return"lcd160cr.LCD160CR.set_startup_deco("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.save_to_flash"]=function(n){return Blockly.Python.definitions_.import_lcd160cr="import lcd160cr","lcd160cr.LCD160CR.save_to_flash()\n"},Blockly.Python["lcd160cr_LCD160CR.set_pixel"]=function(n){var t;return"lcd160cr.LCD160CR.set_pixel("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.get_pixel"]=function(n){var t;return["lcd160cr.LCD160CR.get_pixel("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["lcd160cr_LCD160CR.get_line"]=function(n){var t;return"lcd160cr.LCD160CR.get_line("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.screen_dump"]=function(n){var t;return"lcd160cr.LCD160CR.screen_dump("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.screen_load"]=function(n){var t;return"lcd160cr.LCD160CR.screen_load("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_pos"]=function(n){var t;return"lcd160cr.LCD160CR.set_pos("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_text_color"]=function(n){var t;return"lcd160cr.LCD160CR.set_text_color("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_font"]=function(n){var t;return"lcd160cr.LCD160CR.set_font("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.write"]=function(n){var t;return"lcd160cr.LCD160CR.write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_pen"]=function(n){var t;return"lcd160cr.LCD160CR.set_pen("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.erase"]=function(n){return Blockly.Python.definitions_.import_lcd160cr="import lcd160cr","lcd160cr.LCD160CR.erase()\n"},Blockly.Python["lcd160cr_LCD160CR.dot"]=function(n){var t;return"lcd160cr.LCD160CR.dot("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.rect"]=function(n){var t;return"lcd160cr.LCD160CR.rect("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.rect_outline"]=function(n){var t;return"lcd160cr.LCD160CR.rect_outline("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.rect_interior"]=function(n){var t;return"lcd160cr.LCD160CR.rect_interior("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.line"]=function(n){var t;return"lcd160cr.LCD160CR.line("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.dot_no_clip"]=function(n){var t;return"lcd160cr.LCD160CR.dot_no_clip("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.rect_no_clip"]=function(n){var t;return"lcd160cr.LCD160CR.rect_no_clip("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.rect_outline_no_clip"]=function(n){var t;return"lcd160cr.LCD160CR.rect_outline_no_clip("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.rect_interior_no_clip"]=function(n){var t;return"lcd160cr.LCD160CR.rect_interior_no_clip("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.line_no_clip"]=function(n){var t;return"lcd160cr.LCD160CR.line_no_clip("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.poly_dot"]=function(n){var t;return"lcd160cr.LCD160CR.poly_dot("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.poly_line"]=function(n){var t;return"lcd160cr.LCD160CR.poly_line("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.touch_config"]=function(n){var t;return"lcd160cr.LCD160CR.touch_config("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.is_touched"]=function(n){return Blockly.Python.definitions_.import_lcd160cr="import lcd160cr","lcd160cr.LCD160CR.is_touched()\n"},Blockly.Python["lcd160cr_LCD160CR.get_touch"]=function(n){return Blockly.Python.definitions_.import_lcd160cr="import lcd160cr","lcd160cr.LCD160CR.get_touch()\n"},Blockly.Python["lcd160cr_LCD160CR.set_spi_win"]=function(n){var t;return"lcd160cr.LCD160CR.set_spi_win("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.fast_spi"]=function(n){var t;return["lcd160cr.LCD160CR.fast_spi("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["lcd160cr_LCD160CR.show_framebuf"]=function(n){var t;return"lcd160cr.LCD160CR.show_framebuf("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_scroll"]=function(n){var t;return"lcd160cr.LCD160CR.set_scroll("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_scroll_win"]=function(n){var t;return"lcd160cr.LCD160CR.set_scroll_win("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_scroll_win_param"]=function(n){var t;return"lcd160cr.LCD160CR.set_scroll_win_param("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.set_scroll_buf"]=function(n){var t;return"lcd160cr.LCD160CR.set_scroll_buf("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.jpeg"]=function(n){var t;return"lcd160cr.LCD160CR.jpeg("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.jpeg_start"]=function(n){var t;return"lcd160cr.LCD160CR.jpeg_start("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.jpeg_data"]=function(n){var t;return"lcd160cr.LCD160CR.jpeg_data("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["lcd160cr_LCD160CR.feed_wdt"]=function(n){return Blockly.Python.definitions_.import_lcd160cr="import lcd160cr","lcd160cr.LCD160CR.feed_wdt()\n"},Blockly.Python["lcd160cr_LCD160CR.reset"]=function(n){return Blockly.Python.definitions_.import_lcd160cr="import lcd160cr","lcd160cr.LCD160CR.reset()\n"},Blockly.Python["machine.ADC_ADC.read_u16"]=function(n){return Blockly.Python.definitions_["import_machine.ADC"]="import machine.ADC","machine.ADC.ADC.read_u16()\n"},Blockly.Python["machine.ADCWiPy_ADCWiPy.channel"]=function(n){var t;return"machine.ADCWiPy.ADCWiPy.channel("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.ADCWiPy_ADCWiPy.init"]=function(n){return Blockly.Python.definitions_["import_machine.ADCWiPy"]="import machine.ADCWiPy","machine.ADCWiPy.ADCWiPy.init()\n"},Blockly.Python["machine.ADCWiPy_ADCWiPy.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.ADCWiPy"]="import machine.ADCWiPy","machine.ADCWiPy.ADCWiPy.deinit()\n"},Blockly.Python["machine.ADCWiPy_adcchannel"]=function(n){return Blockly.Python.definitions_["import_machine.ADCWiPy"]="import machine.ADCWiPy","machine.ADCWiPy.adcchannel()\n"},Blockly.Python["machine.ADCWiPy_adcchannel.value"]=function(n){return Blockly.Python.definitions_["import_machine.ADCWiPy"]="import machine.ADCWiPy",["machine.ADCWiPy.adcchannel.value()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.ADCWiPy_adcchannel.init"]=function(n){return Blockly.Python.definitions_["import_machine.ADCWiPy"]="import machine.ADCWiPy","machine.ADCWiPy.adcchannel.init()\n"},Blockly.Python["machine.ADCWiPy_adcchannel.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.ADCWiPy"]="import machine.ADCWiPy","machine.ADCWiPy.adcchannel.deinit()\n"},Blockly.Python["machine.I2C_I2C.init"]=function(n){var t;return"machine.I2C.I2C.init("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.I2C_I2C.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.I2C"]="import machine.I2C","machine.I2C.I2C.deinit()\n"},Blockly.Python["machine.I2C_I2C.scan"]=function(n){return Blockly.Python.definitions_["import_machine.I2C"]="import machine.I2C","machine.I2C.I2C.scan()\n"},Blockly.Python["machine.I2C_I2C.start"]=function(n){return Blockly.Python.definitions_["import_machine.I2C"]="import machine.I2C","machine.I2C.I2C.start()\n"},Blockly.Python["machine.I2C_I2C.stop"]=function(n){return Blockly.Python.definitions_["import_machine.I2C"]="import machine.I2C","machine.I2C.I2C.stop()\n"},Blockly.Python["machine.I2C_I2C.readinto"]=function(n){var t;return["machine.I2C.I2C.readinto("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.I2C_I2C.write"]=function(n){var t;return"machine.I2C.I2C.write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.I2C_I2C.readfrom"]=function(n){var t;return["machine.I2C.I2C.readfrom("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.I2C_I2C.readfrom_into"]=function(n){var t;return["machine.I2C.I2C.readfrom_into("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.I2C_I2C.writeto"]=function(n){var t;return"machine.I2C.I2C.writeto("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.I2C_I2C.writevto"]=function(n){var t;return"machine.I2C.I2C.writevto("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.I2C_I2C.readfrom_mem"]=function(n){var t;return"machine.I2C.I2C.readfrom_mem("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.I2C_I2C.readfrom_mem_into"]=function(n){var t;return"machine.I2C.I2C.readfrom_mem_into("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.I2C_I2C.writeto_mem"]=function(n){var t;return"machine.I2C.I2C.writeto_mem("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Pin_Pin.init"]=function(n){var t;return"machine.Pin.Pin.init("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Pin_Pin.value"]=function(n){var t;return"machine.Pin.Pin.value("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Pin_Pin.__call__"]=function(n){var t;return"machine.Pin.Pin.__call__("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Pin_Pin.on"]=function(n){return Blockly.Python.definitions_["import_machine.Pin"]="import machine.Pin","machine.Pin.Pin.on()\n"},Blockly.Python["machine.Pin_Pin.off"]=function(n){return Blockly.Python.definitions_["import_machine.Pin"]="import machine.Pin","machine.Pin.Pin.off()\n"},Blockly.Python["machine.Pin_Pin.mode"]=function(n){var t;return"machine.Pin.Pin.mode("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Pin_Pin.pull"]=function(n){var t;return"machine.Pin.Pin.pull("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Pin_Pin.drive"]=function(n){var t;return"machine.Pin.Pin.drive("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Pin_Pin.irq"]=function(n){var t;return"machine.Pin.Pin.irq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.machine_reset=function(n){return Blockly.Python.definitions_.import_machine="import machine","machine.reset()\n"},Blockly.Python.machine_soft_reset=function(n){return Blockly.Python.definitions_.import_machine="import machine","machine.soft_reset()\n"},Blockly.Python.machine_reset_cause=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.reset_cause()",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.machine_disable_irq=function(n){return Blockly.Python.definitions_.import_machine="import machine","machine.disable_irq()\n"},Blockly.Python.machine_enable_irq=function(n){var t;return"machine.enable_irq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.machine_freq=function(n){return Blockly.Python.definitions_.import_machine="import machine","machine.freq()\n"},Blockly.Python.machine_idle=function(n){return Blockly.Python.definitions_.import_machine="import machine","machine.idle()\n"},Blockly.Python.machine_sleep=function(n){return Blockly.Python.definitions_.import_machine="import machine","machine.sleep()\n"},Blockly.Python.machine_lightsleep=function(n){var t;return"machine.lightsleep("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.machine_wake_reason=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.wake_reason()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.machine_unique_id=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.unique_id()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.machine_time_pulse_us=function(n){var t;return"machine.time_pulse_us("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.machine_rng=function(n){return Blockly.Python.definitions_.import_machine="import machine",["machine.rng()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.RTC_RTC.init"]=function(n){var t;return"machine.RTC.RTC.init("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.RTC_RTC.now"]=function(n){return Blockly.Python.definitions_["import_machine.RTC"]="import machine.RTC",["machine.RTC.RTC.now()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.RTC_RTC.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.RTC"]="import machine.RTC","machine.RTC.RTC.deinit()\n"},Blockly.Python["machine.RTC_RTC.alarm"]=function(n){var t;return"machine.RTC.RTC.alarm("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.RTC_RTC.alarm_left"]=function(n){var t;return["machine.RTC.RTC.alarm_left("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.RTC_RTC.cancel"]=function(n){var t;return"machine.RTC.RTC.cancel("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.RTC_RTC.irq"]=function(n){var t;return"machine.RTC.RTC.irq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.SD_SD.init"]=function(n){var t;return"machine.SD.SD.init("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.SD_SD.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.SD"]="import machine.SD","machine.SD.SD.deinit()\n"},Blockly.Python["machine.Signal_Signal.value"]=function(n){var t;return"machine.Signal.Signal.value("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Signal_Signal.on"]=function(n){return Blockly.Python.definitions_["import_machine.Signal"]="import machine.Signal","machine.Signal.Signal.on()\n"},Blockly.Python["machine.Signal_Signal.off"]=function(n){return Blockly.Python.definitions_["import_machine.Signal"]="import machine.Signal","machine.Signal.Signal.off()\n"},Blockly.Python["machine.SPI_SPI.init"]=function(n){var t;return"machine.SPI.SPI.init("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.SPI_SPI.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.SPI"]="import machine.SPI","machine.SPI.SPI.deinit()\n"},Blockly.Python["machine.SPI_SPI.read"]=function(n){var t;return["machine.SPI.SPI.read("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.SPI_SPI.readinto"]=function(n){var t;return["machine.SPI.SPI.readinto("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.SPI_SPI.write"]=function(n){var t;return"machine.SPI.SPI.write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.SPI_SPI.write_readinto"]=function(n){var t;return"machine.SPI.SPI.write_readinto("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Timer_Timer.init"]=function(n){var t;return"machine.Timer.Timer.init("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.Timer_Timer.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.Timer"]="import machine.Timer","machine.Timer.Timer.deinit()\n"},Blockly.Python["machine.TimerWiPy_TimerWiPy.init"]=function(n){var t;return"machine.TimerWiPy.TimerWiPy.init("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.TimerWiPy_TimerWiPy.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.TimerWiPy"]="import machine.TimerWiPy","machine.TimerWiPy.TimerWiPy.deinit()\n"},Blockly.Python["machine.TimerWiPy_TimerWiPy.channel"]=function(n){var t;return"machine.TimerWiPy.TimerWiPy.channel("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.TimerWiPy_timerchannel.irq"]=function(n){var t;return"machine.TimerWiPy.timerchannel.irq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.TimerWiPy_timerchannel.freq"]=function(n){var t;return"machine.TimerWiPy.timerchannel.freq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.TimerWiPy_timerchannel.period"]=function(n){var t;return"machine.TimerWiPy.timerchannel.period("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.TimerWiPy_timerchannel.duty_cycle"]=function(n){var t;return"machine.TimerWiPy.timerchannel.duty_cycle("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.UART_UART.init"]=function(n){var t;return"machine.UART.UART.init("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.UART_UART.deinit"]=function(n){return Blockly.Python.definitions_["import_machine.UART"]="import machine.UART","machine.UART.UART.deinit()\n"},Blockly.Python["machine.UART_UART.any"]=function(n){return Blockly.Python.definitions_["import_machine.UART"]="import machine.UART","machine.UART.UART.any()\n"},Blockly.Python["machine.UART_UART.read"]=function(n){var t;return"machine.UART.UART.read("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.UART_UART.readinto"]=function(n){var t;return"machine.UART.UART.readinto("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.UART_UART.readline"]=function(n){return Blockly.Python.definitions_["import_machine.UART"]="import machine.UART",["machine.UART.UART.readline()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["machine.UART_UART.write"]=function(n){var t;return"machine.UART.UART.write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.UART_UART.sendbreak"]=function(n){return Blockly.Python.definitions_["import_machine.UART"]="import machine.UART","machine.UART.UART.sendbreak()\n"},Blockly.Python["machine.UART_UART.irq"]=function(n){var t;return"machine.UART.UART.irq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["machine.WDT_wdt.feed"]=function(n){return Blockly.Python.definitions_["import_machine.WDT"]="import machine.WDT","machine.WDT.wdt.feed()\n"},Blockly.Python.math_acos=function(n){var t;return["math.acos("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_acosh=function(n){var t;return["math.acosh("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_asin=function(n){var t;return["math.asin("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_asinh=function(n){var t;return["math.asinh("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_atan=function(n){var t;return["math.atan("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_atan2=function(n){var t;return["math.atan2("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_atanh=function(n){var t;return["math.atanh("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_ceil=function(n){var t;return["math.ceil("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_copysign=function(n){var t;return["math.copysign("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_cos=function(n){var t;return["math.cos("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_cosh=function(n){var t;return["math.cosh("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_degrees=function(n){var t;return["math.degrees("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_erf=function(n){var t;return["math.erf("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_erfc=function(n){var t;return["math.erfc("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_exp=function(n){var t;return["math.exp("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_expm1=function(n){var t;return["math.expm1("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_fabs=function(n){var t;return["math.fabs("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_floor=function(n){var t;return["math.floor("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_fmod=function(n){var t;return["math.fmod("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_frexp=function(n){var t;return"math.frexp("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.math_gamma=function(n){var t;return["math.gamma("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_isfinite=function(n){var t;return["math.isfinite("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_isinf=function(n){var t;return["math.isinf("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_isnan=function(n){var t;return["math.isnan("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_ldexp=function(n){var t;return["math.ldexp("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_lgamma=function(n){var t;return["math.lgamma("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_log=function(n){var t;return["math.log("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_log10=function(n){var t;return["math.log10("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_log2=function(n){var t;return["math.log2("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_modf=function(n){var t;return["math.modf("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_pow=function(n){var t;return"math.pow("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.math_radians=function(n){var t;return["math.radians("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_sin=function(n){var t;return["math.sin("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_sinh=function(n){var t;return["math.sinh("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_sqrt=function(n){var t;return["math.sqrt("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_tan=function(n){var t;return["math.tan("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_tanh=function(n){var t;return["math.tanh("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.math_trunc=function(n){var t;return["math.trunc("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.micropython_const=function(n){var t;return"micropython.const("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.micropython_opt_level=function(n){var t;return"micropython.opt_level("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.micropython_alloc_emergency_exception_buf=function(n){var t;return"micropython.alloc_emergency_exception_buf("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.micropython_mem_info=function(n){var t;return"micropython.mem_info("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.micropython_qstr_info=function(n){var t;return"micropython.qstr_info("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.micropython_stack_use=function(n){return Blockly.Python.definitions_.import_micropython="import micropython",["micropython.stack_use()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.micropython_heap_lock=function(n){return Blockly.Python.definitions_.import_micropython="import micropython","micropython.heap_lock()\n"},Blockly.Python.micropython_heap_unlock=function(n){return Blockly.Python.definitions_.import_micropython="import micropython","micropython.heap_unlock()\n"},Blockly.Python.micropython_heap_locked=function(n){return Blockly.Python.definitions_.import_micropython="import micropython","micropython.heap_locked()\n"},Blockly.Python.micropython_kbd_intr=function(n){var t;return"micropython.kbd_intr("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.micropython_schedule=function(n){var t;return"micropython.schedule("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["network_AbstractNIC.active"]=function(n){var t;return"network.AbstractNIC.active("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["network_AbstractNIC.connect"]=function(n){var t;return"network.AbstractNIC.connect("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["network_AbstractNIC.disconnect"]=function(n){return Blockly.Python.definitions_.import_network="import network","network.AbstractNIC.disconnect()\n"},Blockly.Python["network_AbstractNIC.isconnected"]=function(n){return Blockly.Python.definitions_.import_network="import network","network.AbstractNIC.isconnected()\n"},Blockly.Python["network_AbstractNIC.scan"]=function(n){var t;return"network.AbstractNIC.scan("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["network_AbstractNIC.status"]=function(n){var t;return"network.AbstractNIC.status("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["network_AbstractNIC.ifconfig"]=function(n){var t;return"network.AbstractNIC.ifconfig("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["network_AbstractNIC.config"]=function(n){var t;return["network.AbstractNIC.config("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.network_phy_mode=function(n){var t;return"network.phy_mode("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_delay=function(n){var t;return"pyb.delay("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_udelay=function(n){var t;return"pyb.udelay("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_millis=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.millis()\n"},Blockly.Python.pyb_micros=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.micros()\n"},Blockly.Python.pyb_elapsed_millis=function(n){var t;return"pyb.elapsed_millis("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_elapsed_micros=function(n){var t;return"pyb.elapsed_micros("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_hard_reset=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.hard_reset()\n"},Blockly.Python.pyb_bootloader=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.bootloader()\n"},Blockly.Python.pyb_fault_debug=function(n){var t;return"pyb.fault_debug("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_disable_irq=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.disable_irq()\n"},Blockly.Python.pyb_enable_irq=function(n){var t;return"pyb.enable_irq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_freq=function(n){var t;return"pyb.freq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_wfi=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.wfi()\n"},Blockly.Python.pyb_stop=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.stop()\n"},Blockly.Python.pyb_standby=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.standby()\n"},Blockly.Python.pyb_have_cdc=function(n){return Blockly.Python.definitions_.import_pyb="import pyb",["pyb.have_cdc()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.pyb_hid=function(n){var t;return"pyb.hid("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_info=function(n){var t;return"pyb.info("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_main=function(n){var t;return"pyb.main("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_mount=function(n){var t;return"pyb.mount("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.pyb_repl_uart=function(n){var t;return["pyb.repl_uart("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.pyb_rng=function(n){return Blockly.Python.definitions_.import_pyb="import pyb",["pyb.rng()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.pyb_sync=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.sync()\n"},Blockly.Python.pyb_unique_id=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.unique_id()\n"},Blockly.Python.pyb_usb_mode=function(n){return Blockly.Python.definitions_.import_pyb="import pyb","pyb.usb_mode()\n"},Blockly.Python.sys_exit=function(n){var t;return"sys.exit("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.sys_atexit=function(n){var t;return"sys.atexit("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.sys_print_exception=function(n){var t;return"sys.print_exception("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uarray_append=function(n){var t;return"uarray.append("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uarray_extend=function(n){var t;return"uarray.extend("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uasyncio_create_task=function(n){var t;return"uasyncio.create_task("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uasyncio_run=function(n){var t;return"uasyncio.run("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uasyncio_sleep=function(n){var t;return"uasyncio.sleep("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uasyncio_sleep_ms=function(n){var t;return"uasyncio.sleep_ms("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uasyncio_wait_for=function(n){var t;return"uasyncio.wait_for("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uasyncio_gather=function(n){var t;return"uasyncio.gather("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uasyncio_Task.cancel"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Task.cancel()\n"},Blockly.Python["uasyncio_Event.is_set"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Event.is_set()\n"},Blockly.Python["uasyncio_Event.set"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Event.set()\n"},Blockly.Python["uasyncio_Event.clear"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Event.clear()\n"},Blockly.Python["uasyncio_Event.wait"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Event.wait()\n"},Blockly.Python["uasyncio_Lock.locked"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Lock.locked()\n"},Blockly.Python["uasyncio_Lock.acquire"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Lock.acquire()\n"},Blockly.Python["uasyncio_Lock.release"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Lock.release()\n"},Blockly.Python.uasyncio_open_connection=function(n){var t;return"uasyncio.open_connection("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uasyncio_start_server=function(n){var t;return"uasyncio.start_server("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uasyncio_Stream.get_extra_info"]=function(n){var t;return["uasyncio.Stream.get_extra_info("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["uasyncio_Stream.close"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Stream.close()\n"},Blockly.Python["uasyncio_Stream.wait_closed"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Stream.wait_closed()\n"},Blockly.Python["uasyncio_Stream.read"]=function(n){var t;return["uasyncio.Stream.read("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["uasyncio_Stream.readline"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio",["uasyncio.Stream.readline()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["uasyncio_Stream.write"]=function(n){var t;return"uasyncio.Stream.write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uasyncio_Stream.drain"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Stream.drain()\n"},Blockly.Python["uasyncio_Server.close"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Server.close()\n"},Blockly.Python["uasyncio_Server.wait_closed"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Server.wait_closed()\n"},Blockly.Python.uasyncio_get_event_loop=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio",["uasyncio.get_event_loop()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uasyncio_new_event_loop=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.new_event_loop()\n"},Blockly.Python["uasyncio_Loop.create_task"]=function(n){var t;return"uasyncio.Loop.create_task("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uasyncio_Loop.run_forever"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Loop.run_forever()\n"},Blockly.Python["uasyncio_Loop.run_until_complete"]=function(n){var t;return"uasyncio.Loop.run_until_complete("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uasyncio_Loop.stop"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Loop.stop()\n"},Blockly.Python["uasyncio_Loop.close"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio","uasyncio.Loop.close()\n"},Blockly.Python["uasyncio_Loop.set_exception_handler"]=function(n){var t;return"uasyncio.Loop.set_exception_handler("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uasyncio_Loop.get_exception_handler"]=function(n){return Blockly.Python.definitions_.import_uasyncio="import uasyncio",["uasyncio.Loop.get_exception_handler()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["uasyncio_Loop.default_exception_handler"]=function(n){var t;return"uasyncio.Loop.default_exception_handler("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uasyncio_Loop.call_exception_handler"]=function(n){var t;return"uasyncio.Loop.call_exception_handler("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ubinascii_hexlify=function(n){var t;return"ubinascii.hexlify("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ubinascii_unhexlify=function(n){var t;return"ubinascii.unhexlify("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ubinascii_a2b_base64=function(n){var t;return"ubinascii.a2b_base64("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ubinascii_b2a_base64=function(n){var t;return"ubinascii.b2a_base64("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.active"]=function(n){var t;return"ubluetooth.BLE.active("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.config"]=function(n){var t;return["ubluetooth.BLE.config("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["ubluetooth_BLE.irq"]=function(n){var t;return"ubluetooth.BLE.irq("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gap_advertise"]=function(n){var t;return"ubluetooth.BLE.gap_advertise("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gap_scan"]=function(n){var t;return"ubluetooth.BLE.gap_scan("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gatts_register_services"]=function(n){var t;return"ubluetooth.BLE.gatts_register_services("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gatts_read"]=function(n){var t;return["ubluetooth.BLE.gatts_read("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["ubluetooth_BLE.gatts_write"]=function(n){var t;return"ubluetooth.BLE.gatts_write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gatts_notify"]=function(n){var t;return"ubluetooth.BLE.gatts_notify("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gatts_set_buffer"]=function(n){var t;return"ubluetooth.BLE.gatts_set_buffer("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gap_connect"]=function(n){var t;return"ubluetooth.BLE.gap_connect("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gap_disconnect"]=function(n){var t;return"ubluetooth.BLE.gap_disconnect("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gattc_discover_services"]=function(n){var t;return"ubluetooth.BLE.gattc_discover_services("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gattc_discover_characteristics"]=function(n){var t;return"ubluetooth.BLE.gattc_discover_characteristics("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gattc_discover_descriptors"]=function(n){var t;return"ubluetooth.BLE.gattc_discover_descriptors("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gattc_read"]=function(n){var t;return"ubluetooth.BLE.gattc_read("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ubluetooth_BLE.gattc_write"]=function(n){var t;return"ubluetooth.BLE.gattc_write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ucollections_deque=function(n){var t;return"ucollections.deque("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ucollections_deque.append"]=function(n){var t;return"ucollections.deque.append("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ucollections_deque.popleft"]=function(n){return Blockly.Python.definitions_.import_ucollections="import ucollections","ucollections.deque.popleft()\n"},Blockly.Python.ucollections_namedtuple=function(n){var t;return"ucollections.namedtuple("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ucollections_OrderedDict=function(n){var t;return"ucollections.OrderedDict("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ucryptolib_encrypt=function(n){var t;return"ucryptolib.encrypt("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ucryptolib_decrypt=function(n){var t;return"ucryptolib.decrypt("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uctypes_sizeof=function(n){var t;return["uctypes.sizeof("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uctypes_addressof=function(n){var t;return["uctypes.addressof("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uctypes_bytes_at=function(n){var t;return"uctypes.bytes_at("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uctypes_bytearray_at=function(n){var t;return"uctypes.bytearray_at("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uhashlib_hash.update"]=function(n){var t;return"uhashlib.hash.update("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uhashlib_hash.digest"]=function(n){return Blockly.Python.definitions_.import_uhashlib="import uhashlib",["uhashlib.hash.digest()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["uhashlib_hash.hexdigest"]=function(n){return Blockly.Python.definitions_.import_uhashlib="import uhashlib","uhashlib.hash.hexdigest()\n"},Blockly.Python.uheapq_heappush=function(n){var t;return"uheapq.heappush("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uheapq_heappop=function(n){var t;return"uheapq.heappop("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uheapq_heapify=function(n){var t;return"uheapq.heapify("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uio_open=function(n){var t;return"uio.open("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uio_getvalue=function(n){return Blockly.Python.definitions_.import_uio="import uio",["uio.getvalue()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.ujson_dump=function(n){var t;return"ujson.dump("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ujson_dumps=function(n){var t;return["ujson.dumps("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.ujson_load=function(n){var t;return"ujson.load("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ujson_loads=function(n){var t;return"ujson.loads("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_uname=function(n){return Blockly.Python.definitions_.import_uos="import uos",["uos.uname()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uos_urandom=function(n){var t;return["uos.urandom("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uos_chdir=function(n){var t;return"uos.chdir("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_getcwd=function(n){return Blockly.Python.definitions_.import_uos="import uos",["uos.getcwd()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uos_ilistdir=function(n){var t;return"uos.ilistdir("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_listdir=function(n){var t;return["os.listdir("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uos_mkdir=function(n){var t;return"uos.mkdir("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.sd_mount=function(n){var t;return Blockly.Python.definitions_.import_os="import os",Blockly.Python.definitions_.import_machine="import machine","os.mount(machine.SDCard(), "+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_remove=function(n){var t;return"uos.remove("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_rmdir=function(n){var t;return"uos.rmdir("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_rename=function(n){var t;return"uos.rename("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_stat=function(n){var t;return["uos.stat("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uos_statvfs=function(n){var t;return["uos.statvfs("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.uos_sync=function(n){return Blockly.Python.definitions_.import_uos="import uos","uos.sync()\n"},Blockly.Python.uos_dupterm=function(n){var t;return"uos.dupterm("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_mount=function(n){var t;return"uos.mount("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_umount=function(n){var t;return"os.umount("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_readblocks=function(n){var t;return"uos.readblocks("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_readblocks=function(n){var t;return"uos.readblocks("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_writeblocks=function(n){var t;return"uos.writeblocks("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_writeblocks=function(n){var t;return"uos.writeblocks("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uos_ioctl=function(n){var t;return"uos.ioctl("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ure_compile=function(n){var t;return"ure.compile("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ure_match=function(n){var t;return"ure.match("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ure_search=function(n){var t;return"ure.search("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ure_sub=function(n){var t;return"ure.sub("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ure_regex.match"]=function(n){var t;return"ure.regex.match("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ure_regex.split"]=function(n){var t;return"ure.regex.split("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ure_match.group"]=function(n){var t;return["ure.match.group("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["ure_match.groups"]=function(n){return Blockly.Python.definitions_.import_ure="import ure",["ure.match.groups()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["ure_match.start"]=function(n){var t;return"ure.match.start("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ure_match.span"]=function(n){var t;return"ure.match.span("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uselect_poll=function(n){return Blockly.Python.definitions_.import_uselect="import uselect","uselect.poll()\n"},Blockly.Python.uselect_select=function(n){var t;return"uselect.select("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uselect_poll.register"]=function(n){var t;return"uselect.poll.register("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uselect_poll.unregister"]=function(n){var t;return"uselect.poll.unregister("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uselect_poll.modify"]=function(n){var t;return"uselect.poll.modify("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uselect_poll.poll"]=function(n){var t;return"uselect.poll.poll("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["uselect_poll.ipoll"]=function(n){var t;return"uselect.poll.ipoll("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.usocket_socket=function(n){var t;return"usocket.socket("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.usocket_getaddrinfo=function(n){var t;return"usocket.getaddrinfo("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.usocket_inet_ntop=function(n){var t;return"usocket.inet_ntop("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.usocket_inet_pton=function(n){var t;return"usocket.inet_pton("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.close"]=function(n){return Blockly.Python.definitions_.import_usocket="import usocket","usocket.socket.close()\n"},Blockly.Python["usocket_socket.bind"]=function(n){var t;return"usocket.socket.bind("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.listen"]=function(n){var t;return"usocket.socket.listen("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.accept"]=function(n){return Blockly.Python.definitions_.import_usocket="import usocket","usocket.socket.accept()\n"},Blockly.Python["usocket_socket.connect"]=function(n){var t;return"usocket.socket.connect("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.send"]=function(n){var t;return"usocket.socket.send("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.sendall"]=function(n){var t;return"usocket.socket.sendall("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.recv"]=function(n){var t;return"usocket.socket.recv("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.sendto"]=function(n){var t;return"usocket.socket.sendto("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.recvfrom"]=function(n){var t;return"usocket.socket.recvfrom("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.setsockopt"]=function(n){var t;return"usocket.socket.setsockopt("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.settimeout"]=function(n){var t;return"usocket.socket.settimeout("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.setblocking"]=function(n){var t;return"usocket.socket.setblocking("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.makefile"]=function(n){var t;return["usocket.socket.makefile("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["usocket_socket.read"]=function(n){var t;return"usocket.socket.read("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.readinto"]=function(n){var t;return"usocket.socket.readinto("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["usocket_socket.readline"]=function(n){return Blockly.Python.definitions_.import_usocket="import usocket",["usocket.socket.readline()\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python["usocket_socket.write"]=function(n){var t;return"usocket.socket.write("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python["ussl_ussl.wrap_socket"]=function(n){var t;return"ussl.ussl.wrap_socket("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ustruct_calcsize=function(n){var t;return["ustruct.calcsize("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.ustruct_pack=function(n){var t;return"ustruct.pack("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ustruct_pack_into=function(n){var t;return"ustruct.pack_into("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ustruct_unpack=function(n){var t;return"ustruct.unpack("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.ustruct_unpack_from=function(n){var t;return"ustruct.unpack_from("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.utime_localtime=function(n){var t;return"utime.localtime("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.utime_mktime=function(n){return Blockly.Python.definitions_.import_utime="import utime","utime.mktime()\n"},Blockly.Python.utime_sleep=function(n){var t;return"utime.sleep("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.utime_sleep_ms=function(n){var t;return"utime.sleep_ms("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.utime_sleep_us=function(n){var t;return"utime.sleep_us("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.utime_ticks_ms=function(n){return Blockly.Python.definitions_.import_utime="import utime","utime.ticks_ms()\n"},Blockly.Python.utime_ticks_us=function(n){return Blockly.Python.definitions_.import_utime="import utime","utime.ticks_us()\n"},Blockly.Python.utime_ticks_cpu=function(n){return Blockly.Python.definitions_.import_utime="import utime","utime.ticks_cpu()\n"},Blockly.Python.utime_ticks_add=function(n){var t;return"utime.ticks_add("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.utime_ticks_diff=function(n){var t;return"utime.ticks_diff("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.utime_time=function(n){return Blockly.Python.definitions_.import_utime="import utime","utime.time()\n"},Blockly.Python.uzlib_decompress=function(n){var t;return["uzlib.decompress("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n",Blockly.JavaScript.ORDER_NONE]},Blockly.Python.wipy_heartbeat=function(n){var t;return"wipy.heartbeat("+Blockly.Python.valueToCode(n,"pIn",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Blocks.none={init:function(){this.setColour(65),this.appendDummyInput().appendField("None"),this.setOutput(!0),this.setTooltip("")}},Blockly.Python.none=function(n){return["None",Blockly.Python.ORDER_NONE]},Blockly.Blocks.tostr={init:function(){this.setColour(65),this.appendValueInput("input").appendField("to String"),this.setOutput(!0,"String"),this.setTooltip("")}},Blockly.Python.tostr=function(n){var t;return["str("+Blockly.Python.valueToCode(n,"input",Blockly.Python.ORDER_ATOMIC)+")",Blockly.Python.ORDER_NONE]},Blockly.Blocks.copy={init:function(){this.setColour(45),this.appendValueInput("image").setCheck("image").appendField("copy"),this.setOutput(!0,"image"),this.setInputsInline(!0),this.setTooltip("")}},Blockly.Python.copy=function(n){var t;return[Blockly.Python.valueToCode(n,"image",Blockly.Python.ORDER_ATOMIC)+".copy()",Blockly.Python.ORDER_NONE]},Blockly.Blocks.convertTo={init:function(){this.setColour(45),this.appendValueInput("input").setCheck("image").appendField("convertTo"),this.appendDummyInput().appendField(new Blockly.FieldDropdown([["float","np.float32"],["uchar","np.uint8"],["int","np.int32"],]),"flag"),this.setOutput(!0,"image"),this.setInputsInline(!0),this.setTooltip("")}},Blockly.Python.convertTo=function(n){var t,e=Blockly.Python.valueToCode(n,"input",Blockly.Python.ORDER_ATOMIC);return["np.asarray("+e+", dtype="+n.getFieldValue("flag")+")",Blockly.Python.ORDER_NONE]},Blockly.Blocks.roi={init:function(){this.setColour(45),this.appendValueInput("input").setCheck("image"),this.appendDummyInput().appendField("roi").appendField("y").appendField(new Blockly.FieldTextInput(""),"y0").appendField(":").appendField(new Blockly.FieldTextInput(""),"y1").appendField("x").appendField(new Blockly.FieldTextInput(""),"x0").appendField(":").appendField(new Blockly.FieldTextInput(""),"x1"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip("")}},Blockly.Python.roi=function(n){var t,e=Blockly.Python.valueToCode(n,"input",Blockly.Python.ORDER_ATOMIC),o=n.getFieldValue("y0"),i=n.getFieldValue("y1"),r=n.getFieldValue("x0");return[e+"[int("+o+"):int("+i+"),int("+r+"):int("+n.getFieldValue("x1")+")]",Blockly.Python.ORDER_NONE]},Blockly.Blocks.indexed={init:function(){this.setColour(45),this.appendDummyInput().appendField("indexed"),this.appendValueInput("input").setCheck("image"),this.appendValueInput("index").appendField("index"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip("")}},Blockly.Python.indexed=function(n){var t,e=Blockly.Python.valueToCode(n,"index",Blockly.Python.ORDER_ATOMIC);return[Blockly.Python.valueToCode(n,"input",Blockly.Python.ORDER_ATOMIC)+"["+e+"]",Blockly.Python.ORDER_NONE]},Blockly.Blocks.lists_append={init:function(){this.setColour(45),this.appendDummyInput().appendField("append"),this.appendValueInput("list"),this.appendValueInput("item").appendField("item"),this.setInputsInline(!0),this.setTooltip("append items to a list"),this.setPreviousStatement(!0),this.setNextStatement(!0)}},Blockly.Python.lists_append=function(n){var t=Blockly.Python.valueToCode(n,"list",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"item",Blockly.Python.ORDER_ATOMIC);return t+".append("+e+")\n"},Blockly.Blocks.imgsize={init:function(){this.setColour(45),this.appendDummyInput().appendField("imgsize"),this.appendValueInput("image"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip("")}},Blockly.Python.imgsize=function(n){var t;return["np.shape("+Blockly.Python.valueToCode(n,"image",Blockly.Python.ORDER_ATOMIC)+")[:2]",Blockly.Python.ORDER_NONE]},Blockly.Blocks.load={init:function(){this.setColour(45),this.appendDummyInput().appendField("load").appendField(new Blockly.FieldVariable("image"),"image").appendField(new Blockly.FieldTextInput("media/lena.jpg"),"filename").appendField("gray").appendField(new Blockly.FieldCheckbox("FALSE"),"grey"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("")},getVars:function(){return[this.getFieldValue("image")]},renameVar:function(n,t){Blockly.Names.equals(n,this.getFieldValue("image"))&&this.setFieldValue(t,"image")}},Blockly.Python.load=function(n){var t,e=n.getFieldValue("image"),o=n.getFieldValue("filename");return e+" = cv2.imread('"+o+"',"+("TRUE"==n.getFieldValue("grey")?0:1)+")\n"},Blockly.Blocks.imshow={init:function(){this.setColour(45),this.appendDummyInput().appendField("imshow").appendField(new Blockly.FieldTextInput("mywin"),"windowname"),this.appendValueInput("image").setCheck("image"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("")}},Blockly.Python.imshow=function(n){var t,e=Blockly.Python.valueToCode(n,"image",Blockly.Python.ORDER_ATOMIC);return"cv2.imshow('"+n.getFieldValue("windowname")+"',"+e+")\r\n"},Blockly.Blocks.waitkey={init:function(){this.setColour(45),this.setInputsInline(!0),this.appendDummyInput().appendField("waitKey"),this.appendDummyInput().appendField("millis").appendField(new Blockly.FieldTextInput("0"),"millis"),this.appendDummyInput().appendField("key").appendField(new Blockly.FieldTextInput("27"),"key"),this.appendStatementInput("statement"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("")}},Blockly.Python.waitkey=function(n){var t,e=n.getFieldValue("millis"),o=n.getFieldValue("key");return"if cv2.waitKey("+e+")&0xff == "+o+":\n"+(Blockly.Python.statementToCode(n,"statement")||"  pass\n")},Blockly.Blocks.onmouse={init:function(){this.setColour(45),this.setInputsInline(!0),this.appendDummyInput().appendField("onmouse").appendField(new Blockly.FieldVariable("mywin"),"windowname").appendField(new Blockly.FieldVariable("button"),"button").appendField(new Blockly.FieldVariable("x"),"x").appendField(new Blockly.FieldVariable("y"),"y").appendField(new Blockly.FieldVariable("state"),"state"),this.appendStatementInput("statement"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("")},getVars:function(){return[this.getFieldValue("windowname"),this.getFieldValue("button"),this.getFieldValue("x"),this.getFieldValue("y"),this.getFieldValue("state")]},renameVar:function(n,t){Blockly.Names.equals(n,this.getFieldValue("windowname"))&&this.setFieldValue(t,"windowname"),Blockly.Names.equals(n,this.getFieldValue("button"))&&this.setFieldValue(t,"button"),Blockly.Names.equals(n,this.getFieldValue("x"))&&this.setFieldValue(t,"x"),Blockly.Names.equals(n,this.getFieldValue("y"))&&this.setFieldValue(t,"y"),Blockly.Names.equals(n,this.getFieldValue("state"))&&this.setFieldValue(t,"state")}},Blockly.Python.onmouse=function(n){var t,e=n.getFieldValue("windowname");return n.getFieldValue("key"),"def onmouse(button, x, y, state, param):\n"+(Blockly.Python.statementToCode(n,"statement")||"  pass\n")+"\ncv2.setMouseCallback('"+e+"', onmouse)\n"},Blockly.Blocks.cascade={init:function(){this.setColour(290),this.appendDummyInput().appendField("create").appendField(new Blockly.FieldVariable("cascade"),"cascade").appendField(new Blockly.FieldTextInput("opencv/data/haarcascades/haarcascade_frontalface_alt2.xml"),"xmlfile"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("")},getVars:function(){return[this.getFieldValue("cascade")]},renameVar:function(n,t){Blockly.Names.equals(n,this.getFieldValue("cascade"))&&this.setFieldValue(t,"cascade")}},Blockly.Python.cascade=function(n){var t=n.getFieldValue("xmlfile"),e=n.getFieldValue("cascade");return e+" = cv2.CascadeClassifier('"+t+"')\nif "+e+'.empty(): raise Exception("your cascade is empty. are you sure, the path is correct ?")\n'},Blockly.Blocks.findobjects={init:function(){this.setColour(290),this.appendDummyInput().appendField("detect").appendField(new Blockly.FieldVariable("cascade"),"cascade"),this.appendValueInput("image").setCheck("image"),this.setOutput(!0),this.setTooltip("find objects in an image and return a list of rects.\nto draw them, you will need the tl and br items")},getVars:function(){return[this.getFieldValue("cascade")]},renameVar:function(n,t){Blockly.Names.equals(n,this.getFieldValue("cascade"))&&this.setFieldValue(t,"cascade")}},Blockly.Python.findobjects=function(n){var t=Blockly.Python.valueToCode(n,"image",Blockly.Python.ORDER_ATOMIC);return n.getFieldValue("cascade"),["cascade.detectMultiScale("+t+")",Blockly.Python.ORDER_NONE]},Blockly.Blocks.videocapture={init:function(){this.setColour(135),this.appendDummyInput().appendField("VideoCapture").appendField(new Blockly.FieldTextInput("0"),"input").appendField(new Blockly.FieldTextInput("img"),"img"),this.appendStatementInput("statements").setCheck("image"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("")},getVars:function(){return[this.getFieldValue("img")]},renameVar:function(n,t){Blockly.Names.equals(n,this.getFieldValue("img"))&&this.setFieldValue(t,"img")}},Blockly.Python.videocapture=function(n){Blockly.Python.definitions_.import_cv2="import cv2 \nimport numpy as np";var t,e=n.getFieldValue("input"),o=Blockly.Python.statementToCode(n,"statements");return"cap=cv2.VideoCapture("+e+')\nif not cap.isOpened(): raise Exception("your input:'+e+' could not be opened !")\nwhile cap.isOpened():\n  r,'+n.getFieldValue("img")+"=cap.read()\n  if r==False: break\n"+o},Blockly.Blocks.VideoWriter_VideoWriter={init:function(){this.setColour(22),this.appendDummyInput().appendField("VideoWriter").appendField(new Blockly.FieldVariable("writer"),"writer"),this.appendDummyInput().appendField("filename").appendField(new Blockly.FieldTextInput("my.asf"),"filename"),this.appendDummyInput().appendField("fourcc").appendField(new Blockly.FieldTextInput("XVID"),"fourcc"),this.appendDummyInput().appendField("fps").appendField(new Blockly.FieldTextInput("24"),"fps"),this.appendValueInput("frameSize").appendField("frameSize").setCheck("size"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0),this.setTooltip("videoio_VideoWriter_VideoWriter")},getVars:function(){return[this.getFieldValue("writer")]},renameVar:function(n,t){Blockly.Names.equals(n,this.getFieldValue("writer"))&&this.setFieldValue(t,"writer")}},Blockly.Blocks.VideoWriter_write={init:function(){this.setColour(22),this.appendDummyInput().appendField("write").appendField(new Blockly.FieldVariable("writer"),"writer"),this.appendValueInput("image").appendField("image").setCheck("image"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("videoio_VideoWriter_write")},getVars:function(){return[this.getFieldValue("writer")]},renameVar:function(n,t){Blockly.Names.equals(n,this.getFieldValue("writer"))&&this.setFieldValue(t,"writer")}},Blockly.Python.VideoWriter_VideoWriter=function(n){var t,e=n.getFieldValue("writer"),o=n.getFieldValue("filename"),i=n.getFieldValue("fourcc"),r=e+" = cv2.VideoWriter('"+o+"',cv2.VideoWriter_fourcc(*'"+i+"'),"+n.getFieldValue("fps")+","+Blockly.Python.valueToCode(n,"frameSize",Blockly.Python.ORDER_ATOMIC)+")\n";return r+("if not "+e+'.isOpened(): raise Exception("your writer failed to open!")\n')},Blockly.Python.VideoWriter_write=function(n){var t,e=n.getFieldValue("writer");return e+".write("+Blockly.Python.valueToCode(n,"image",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Blocks.cvtcolor={init:function(){this.setColour(65),this.appendDummyInput().appendField(new Blockly.FieldDropdown([["BGR2GRAY","cv2.COLOR_BGR2GRAY"],["GRAY2BGR","cv2.COLOR_GRAY2BGR"],["BGR2HSV","cv2.COLOR_BGR2HSV"],["HSV2BGR","cv2.COLOR_HSV2BGR"],]),"flag"),this.appendValueInput("img").setCheck("image").appendField("cvtColor"),this.setOutput(!0,"image"),this.setTooltip("")}},Blockly.Python.cvtcolor=function(n){var t,e=Blockly.Python.valueToCode(n,"img",Blockly.Python.ORDER_ATOMIC);return["cv2.cvtColor("+e+","+n.getFieldValue("flag")+")",Blockly.Python.ORDER_NONE]},Blockly.Blocks.threshold={init:function(){this.setColour(65),this.appendDummyInput().appendField(new Blockly.FieldTextInput("30"),"thresh_val").appendField(new Blockly.FieldTextInput("255"),"thresh_to").appendField(new Blockly.FieldDropdown([["BINARY","cv2.THRESH_BINARY"],["BINARY_INV","cv2.THRESH_BINARY_INV"],["OTSU","cv2.THRESH_OTSU"]]),"flag"),this.appendValueInput("img").appendField("threshold").setCheck("image"),this.setOutput(!0,"image"),this.setTooltip("")}},Blockly.Python.threshold=function(n){var t,e=Blockly.Python.valueToCode(n,"img",Blockly.Python.ORDER_ATOMIC),o=n.getFieldValue("flag"),i=n.getFieldValue("thresh_val");return["cv2.threshold("+e+","+i+","+n.getFieldValue("thresh_to")+","+o+")[1]",Blockly.Python.ORDER_NONE]},Blockly.Blocks.newimage={init:function(){this.setColour(65),this.appendDummyInput().appendField("new image").appendField(new Blockly.FieldTextInput("100"),"w").appendField(new Blockly.FieldTextInput("100"),"h").appendField(new Blockly.FieldDropdown([["bgr","bgr"],["gray","gray"],["float","float"]]),"type"),this.appendValueInput("color").appendField("color"),this.setOutput(!0,"image"),this.setTooltip("make a new, empty image")}},Blockly.Python.newimage=function(n){var t=n.getFieldValue("w"),e=n.getFieldValue("h"),o=n.getFieldValue("type"),i=Blockly.Python.valueToCode(n,"color",Blockly.Python.ORDER_ATOMIC);return code="np.ones(("+e+","+t+"),np.uint8)","bgr"==o&&(code="np.ones(("+e+","+t+",3),np.uint8)"),"float"==o&&(code="np.ones(("+e+","+t+"),np.float)"),i&&(code+=" * "+i),[code,Blockly.Python.ORDER_NONE]},Blockly.Blocks.point={init:function(){this.setColour(65),this.appendDummyInput().appendField("point").appendField(new Blockly.FieldTextInput("0"),"x").appendField(new Blockly.FieldTextInput("0"),"y"),this.setOutput(!0,"point"),this.setTooltip("")}},Blockly.Python.point=function(n){var t,e=n.getFieldValue("x");return["("+e+","+n.getFieldValue("y")+")",Blockly.Python.ORDER_NONE]},Blockly.Blocks.point_tl={init:function(){this.setColour(65),this.appendValueInput("rect").appendField("tl").setCheck("rect"),this.setOutput(!0,"point"),this.setTooltip("")}},Blockly.Python.point_tl=function(n){var t=Blockly.Python.valueToCode(n,"rect",Blockly.Python.ORDER_ATOMIC);return["("+t+"[0],"+t+"[1])",Blockly.Python.ORDER_NONE]},Blockly.Blocks.point_br={init:function(){this.setColour(65),this.appendValueInput("rect").appendField("br").setCheck("rect"),this.setOutput(!0,"point"),this.setTooltip("")}},Blockly.Python.point_br=function(n){var t=Blockly.Python.valueToCode(n,"rect",Blockly.Python.ORDER_ATOMIC);return["("+t+"[0]+"+t+"[2],"+t+"[1]+"+t+"[3])",Blockly.Python.ORDER_NONE]},Blockly.Blocks.size={init:function(){this.setColour(65),this.appendDummyInput().appendField("size").appendField(new Blockly.FieldTextInput("0"),"w").appendField(new Blockly.FieldTextInput("0"),"h"),this.setOutput(!0,"size"),this.setTooltip("")}},Blockly.Python.size=function(n){var t,e=n.getFieldValue("w");return["("+e+","+n.getFieldValue("h")+")",Blockly.Python.ORDER_NONE]},Blockly.Blocks.tuple={init:function(){this.setColour(65),this.appendDummyInput().appendField("tuple"),this.appendValueInput("X"),this.setOutput(!0),this.setTooltip("")}},Blockly.Python.tuple=function(n){var t;return["("+Blockly.Python.valueToCode(n,"X",Blockly.Python.ORDER_ATOMIC)+")",Blockly.Python.ORDER_NONE]},Blockly.Blocks.forRange={init:function(){this.setColour(135),this.setInputsInline(!0),this.appendDummyInput().appendField("for"),this.appendDummyInput().appendField(new Blockly.FieldVariable("i"),"i").appendField("in range"),this.appendValueInput("rend").setCheck("Number"),this.appendStatementInput("statement"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("")}},Blockly.Python.forRange=function(n){var t=n.getFieldValue("i"),e=Blockly.Python.valueToCode(n,"rend",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.statementToCode(n,"statement")||"  pass\n";return"for "+t+" in range("+e+"):\n"+o},Blockly.Blocks.forEnum={init:function(){this.setColour(135),this.setInputsInline(!0),this.appendDummyInput().appendField("enumerate"),this.appendDummyInput().appendField(new Blockly.FieldVariable("index"),"index").appendField("and").appendField(new Blockly.FieldVariable("i"),"i").appendField("in"),this.appendValueInput("list"),this.appendStatementInput("statement"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("")},getVars:function(){return[this.getFieldValue("index"),this.getFieldValue("i")]},renameVar:function(n,t){Blockly.Names.equals(n,this.getFieldValue("index"))&&this.setFieldValue(t,"index"),Blockly.Names.equals(n,this.getFieldValue("i"))&&this.setFieldValue(t,"i")}},Blockly.Python.forEnum=function(n){var t=n.getFieldValue("index"),e=n.getFieldValue("i"),o=Blockly.Python.valueToCode(n,"list",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.statementToCode(n,"statement")||"  pass\n";return"for "+t+","+e+" in enumerate("+o+"):\n"+i},Blockly.Blocks.text_eval={init:function(){this.setColour(45),this.setInputsInline(!0),this.appendDummyInput().appendField("eval").appendField(new Blockly.FieldTextInput(""),"text"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("direct python eval")}},Blockly.Python.text_eval=function(n){var t;return n.getFieldValue("text")+"\n"},Blockly.Python.delay_ms=function(n){var t=Blockly.Python.valueToCode(n,"time",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_time="import time","time.sleep_ms("+t+")\n"},Blockly.Python.delay_us=function(n){var t=Blockly.Python.valueToCode(n,"time",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_time="import time","time.sleep_us("+t+")\n"},Blockly.Python.ticks_ms=function(n){return Blockly.Python.definitions_.import_time="import time",["time.ticks_ms()\n",Blockly.Python.ORDER_NONE]},Blockly.Python.ticks_diff=function(n){var t=Blockly.Python.valueToCode(n,"start",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"end",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_time="import time",t=t.split("\n").join(""),["time.ticks_diff("+(e=e.split("\n").join(""))+","+t+")\n",Blockly.Python.ORDER_NONE]},Blockly.Python["utime.vars"]=function(n){if("ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_time="import time";var t="time.monotonic()"}else{Blockly.Python.definitions_.import_utime="import utime";var t=`utime.${n.getFieldValue("VARS")}()`}return[t,Blockly.Python.ORDER_NONE]},Blockly.Python.delay=function(n){var t;return Blockly.Python.definitions_.import_time="import time",`time.${n.getFieldValue("SCALE")}(${Blockly.Python.valueToCode(n,"TIME",Blockly.Python.ORDER_NONE)})
`},Blockly.Python["utime.ticks_add"]=function(n){var t;return Blockly.Python.definitions_.import_utime="import utime",[`utime.ticks_add(${Blockly.Python.valueToCode(n,"TIME1",Blockly.Python.ORDER_NONE)},${Blockly.Python.valueToCode(n,"TIME2",Blockly.Python.ORDER_NONE)})`,Blockly.Python.ORDER_FUNCTION_CALL]},Blockly.Python["utime.ticks_diff"]=function(n){var t;return Blockly.Python.definitions_.import_utime="import utime",[`utime.ticks_diff(${Blockly.Python.valueToCode(n,"TIME1",Blockly.Python.ORDER_NONE)},${Blockly.Python.valueToCode(n,"TIME2",Blockly.Python.ORDER_NONE)})`,Blockly.Python.ORDER_FUNCTION_CALL]},Blockly.Python["utime.deadline"]=function(n){Blockly.Python.definitions_.import_utime="import utime";var t=n.getFieldValue("ID"),e=Blockly.Python.valueToCode(n,"TIME",Blockly.Python.ORDER_NONE),o=n.getFieldValue("SCALE");return`deadline${t} = utime.ticks_add(utime.${o}(), ${e})
while utime.ticks_diff(deadline${t}, utime.${o}()) > 0:
${Blockly.Python.statementToCode(n,"DO")}
`},Blockly.Python.esp32_get_rtc=function(n){return Blockly.Python.definitions_.import_rtc="from machine import RTC",Blockly.Python.definitions_.import_rtc_def="rtc = RTC()",["rtc.datetime()",Blockly.Python.ORDER_NONE]},Blockly.Python.esp8266_get_rtc=function(n){return Blockly.Python.definitions_.import_rtc="from machine import RTC",Blockly.Python.definitions_.import_rtc_def="rtc = RTC()",["rtc.datetime()",Blockly.Python.ORDER_NONE]},Blockly.Python.esp32_set_rtc=function(n){Blockly.Python.definitions_.import_rtc="from machine import RTC",Blockly.Python.definitions_.import_rtc_def="rtc = RTC()";var t=Blockly.Python.valueToCode(n,"year",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"month",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"day",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"hour",Blockly.Python.ORDER_ATOMIC),r=Blockly.Python.valueToCode(n,"minute",Blockly.Python.ORDER_ATOMIC),a=Blockly.Python.valueToCode(n,"second",Blockly.Python.ORDER_ATOMIC);return"rtc.datetime(("+t+","+e+","+o+",0,"+i+","+r+","+a+",0))\n"},Blockly.Python.esp8266_set_rtc=function(n){Blockly.Python.definitions_.import_rtc="from machine import RTC",Blockly.Python.definitions_.import_rtc_def="rtc = RTC()";var t=Blockly.Python.valueToCode(n,"year",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"month",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"day",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"hour",Blockly.Python.ORDER_ATOMIC),r=Blockly.Python.valueToCode(n,"minute",Blockly.Python.ORDER_ATOMIC),a=Blockly.Python.valueToCode(n,"second",Blockly.Python.ORDER_ATOMIC);return"rtc.datetime(("+t+","+e+","+o+",0,"+i+","+r+","+a+",0))\n"},Blockly.Python.stop_timer=function(n){var t;return Blockly.Python.definitions_.import_timer="from machine import Timer","tim"+Blockly.Python.valueToCode(n,"timerNumber",Blockly.Python.ORDER_ATOMIC)+".deinit()\n"},Blockly.Python.thread=function(n){n.getFieldValue("interval");var t=n.getFieldValue("timerNumber"),e=Blockly.Python.statementToCode(n,"statements");return Blockly.Python.definitions_.import_thread="import _thread",Blockly.Python.definitions_["import_timer_callback"+t]="\n#Thread function \ndef thread"+t+"():\n"+e+"\n\n","_thread.start_new_thread(thread"+t+", ())\n"},Blockly.Python.iniciar_thread=function(n){var t;return Blockly.Python.definitions_.import_thread="import _thread","_thread.start_new_thread("+Blockly.Python.valueToCode(n,"FUNCTION",Blockly.Python.ORDER_ATOMIC)+", ())\n"},Blockly.Python.timer=function(n){for(var t,e=n.getFieldValue("interval"),o=n.getFieldValue("timerNumber"),i=Blockly.Python.statementToCode(n,"statements"),r=n.getFieldValue("MODE"),a=[],u=n.workspace,h=Blockly.Variables.allUsedVarModels(u)||[],s=0;t=h[s];s++){var l=t.name;-1==n.getVars().indexOf(l)&&a.push(Blockly.Python.nameDB_.getName(l,Blockly.VARIABLE_CATEGORY_NAME))}return a=a.length?Blockly.Python.INDENT+"global "+a.join(", ")+"\n":"",Blockly.Python.definitions_.import_timer="from machine import Timer",Blockly.Python.definitions_[`import_timer_start${o}`]=`tim${o} = Timer(${o})`,Blockly.Python.definitions_[`import_timer_callback${o}`]=`
#Timer Function Callback
def timerFunc${o}(t):
${a}${i}

`,`tim${o}.init(period=${e}, mode=Timer.${r}, callback=timerFunc${o})
`},Blockly.Python.pico_timer=function(n){var t=n.getFieldValue("interval");n.getFieldValue("timerNumber");var e=Blockly.Python.statementToCode(n,"statements");return Blockly.Python.definitions_.import_timer="from machine import Timer",Blockly.Python.definitions_.import_timer_start="tim=Timer()",Blockly.Python.definitions_.import_timer_callback="\n#Timer Function Callback\ndef timerFunc(t):\n"+e+"\n\n","tim.init(period="+t+", mode=Timer.PERIODIC, callback=timerFunc)\n"},Blockly.Python.deep_sleep8266=function(n){var t=Blockly.Python.valueToCode(n,"interval",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_machine="import machine";var e="rtc = machine.RTC()\n";return e+="rtc.irq(trigger=rtc.ALARM0, wake=machine.DEEPSLEEP)\n",e+="rtc.alarm(rtc.ALARM0, "+t+")\n",e+="machine.deepsleep()\n"},Blockly.Python.deep_sleep=function(n){var t=Blockly.Python.valueToCode(n,"interval",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_machine="import machine","machine.deepsleep("+t+")\n"},Blockly.Python.pwm=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_NONE),e=Blockly.Python.valueToCode(n,"frequency",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"duty",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_pwm="from machine import PWM",this.check([e,o],t),this.setID(t),`pwm${t} = PWM(Pin(${t}))
pwm${t}.freq(${e})
pwm${t}.duty(${o})
`},Blockly.Python.pwm_pico=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_NONE),e=Blockly.Python.valueToCode(n,"frequency",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"duty",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_pwm="from machine import PWM",this.check([e,o],t),this.setID(t),`pwm${t} = PWM(Pin(${t}))
pwm${t}.freq(${e})
pwm${t}.duty_u16(${o})
`},Blockly.Python["pwm.init"]=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_NONE);return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_pwm="from machine import PWM",this.setID(t),`pwm${t} = PWM(Pin(${t}))
`},Blockly.Python["pwm.freq"]=function(n){var t=n.getFieldValue("ID"),e=Blockly.Python.valueToCode(n,"frequency",Blockly.Python.ORDER_NONE),o=`pwm${t}.freq(${e})
`;return this.check(e,t),o},Blockly.Python["pwm.duty"]=function(n){var t=n.getFieldValue("ID"),e=Blockly.Python.valueToCode(n,"duty",Blockly.Python.ORDER_NONE),o=`pwm${t}.duty(${e})
`;return this.check(e,t),o},Blockly.Python["pwm.duty_pico"]=function(n){var t=n.getFieldValue("ID"),e=Blockly.Python.valueToCode(n,"duty",Blockly.Python.ORDER_NONE),o=`pwm${t}.duty_u16(${e})
`;return this.check(e,t),o},Blockly.Python["pwm.deinit"]=function(n){return`pwm${n.getFieldValue("ID")}.deinit()
`},Blockly.Python.randomforestclassifier=function(n){var t=Blockly.Python.valueToCode(n,"random_state",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_random_forest_classifier="from sklearn.ensemble import RandomForestClassifier",["RandomForestClassifier(random_state="+t+")\n",Blockly.Python.ORDER_NONE]},Blockly.Python.fit=function(n){var t=Blockly.Python.valueToCode(n,"classifier",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"X",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"y",Blockly.Python.ORDER_ATOMIC);return t+".fit("+e+","+o+")\n"},Blockly.Python.predict=function(n){var t=Blockly.Python.valueToCode(n,"classifier",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"X",Blockly.Python.ORDER_ATOMIC);return[t+".predict("+e+")\n",Blockly.Python.ORDER_NONE]},Blockly.Python.file_open=function(n){var t=Blockly.Python.valueToCode(n,"file_name",Blockly.Python.ORDER_ATOMIC),e=n.getFieldValue("dropdown_mode"),o="TRUE"==n.getFieldValue("checkbox_binary"),i="";return["open("+t+", '"+(i=o?"b"+e:e)+"')\n",Blockly.Python.ORDER_NONE]},Blockly.Python.file_open_write=function(n){var t;return"f = open("+Blockly.Python.valueToCode(n,"filename",Blockly.Python.ORDER_ATOMIC)+", 'a+')\n"},Blockly.Python.file_open_read=function(n){var t;return"f = open("+Blockly.Python.valueToCode(n,"filename",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.file_close=function(n){var t;return Blockly.Python.nameDB_.getName(n.getFieldValue("filename"),Blockly.VARIABLE_CATEGORY_NAME)+".close()\n"},Blockly.Python.file_close_old=function(n){return Blockly.Python.valueToCode(n,"filename",Blockly.Python.ORDER_ATOMIC),"f.close()\n"},Blockly.Python.file_read=function(n){var t;return[Blockly.Python.nameDB_.getName(n.getFieldValue("filename"),Blockly.VARIABLE_CATEGORY_NAME)+".read()\n",Blockly.Python.ORDER_NONE]},Blockly.Python.file_read_old=function(n){return["f.read()",Blockly.Python.ORDER_NONE]},Blockly.Python.file_write=function(n){var t,e=Blockly.Python.nameDB_.getName(n.getFieldValue("filename"),Blockly.VARIABLE_CATEGORY_NAME);return e+".write("+Blockly.Python.valueToCode(n,"data",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.file_write_line=function(n){var t=Blockly.Python.nameDB_.getName(n.getFieldValue("filename"),Blockly.VARIABLE_CATEGORY_NAME),e=t+".write("+Blockly.Python.valueToCode(n,"data",Blockly.Python.ORDER_ATOMIC)+")\n";return e+(t+".write('\\n')\n")},Blockly.Python.file_write_byte=function(n){var t,e=Blockly.Python.nameDB_.getName(n.getFieldValue("filename"),Blockly.VARIABLE_CATEGORY_NAME);return e+'.write(struct.pack("B",'+Blockly.Python.valueToCode(n,"data",Blockly.Python.ORDER_ATOMIC)+"))\n"},Blockly.Python.file_write_old=function(n){var t="f.write("+Blockly.Python.valueToCode(n,"data",Blockly.Python.ORDER_ATOMIC)+")\n";return t+"f.write('\\n')\n"},Blockly.Python.files_list=function(n){return Blockly.Python.definitions_.import_os="import os",["os.listdir()",Blockly.Python.ORDER_NONE]},Blockly.Python.hcsr_init=function(n){var t=Blockly.Python.valueToCode(n,"echo",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"trigger",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"timeout",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_time="import time",Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_hcr=`

from machine import time_pulse_us

#Based on: https://github.com/lemariva/uPySensors
class HCSR04:
    def __init__(self, trigger_pin, echo_pin, echo_timeout_us=500*2*30):
        self.echo_timeout_us = echo_timeout_us
        self.trigger = Pin(trigger_pin, mode=Pin.OUT)
        self.trigger.value(0)
        self.echo = Pin(echo_pin, mode=Pin.IN)

    def _send_pulse_and_wait(self):
        self.trigger.value(0)
        time.sleep_us(5)
        self.trigger.value(1)
        time.sleep_us(10)
        self.trigger.value(0)
        try:
			pulse_time = time_pulse_us(self.echo, 1, self.echo_timeout_us)
			return pulse_time
        except OSError as ex:
            if ex.args[0] == 110: # 110 = ETIMEDOUT
                raise OSError('Out of range')
            raise ex

    def distance_mm(self):
        pulse_time = self._send_pulse_and_wait()
        mm = pulse_time * 100 // 582
        return mm

    def distance_cm(self):
        pulse_time = self._send_pulse_and_wait()
        cms = (pulse_time / 2) / 29.1
        return cms
`,"ultraSoundSensor = HCSR04(trigger_pin="+e+", echo_pin="+t+", echo_timeout_us="+o+")\n"},Blockly.Python.hcsr_read=function(n){return["ultraSoundSensor.distance_mm()",Blockly.Python.ORDER_NONE]},Blockly.Python.char_lcd_init=function(n){var t=Blockly.Python.valueToCode(n,"lines",Blockly.Python.ORDER_NONE),e=Blockly.Python.valueToCode(n,"columns",Blockly.Python.ORDER_NONE),o=Blockly.Python.valueToCode(n,"sda",Blockly.Python.ORDER_NONE),i=Blockly.Python.valueToCode(n,"scl",Blockly.Python.ORDER_NONE);Blockly.Python.definitions_.import_lcd="from machine import Pin, SoftI2C",Blockly.Python.definitions_.import_i2c_lcd="from lcd import I2cLcd",Blockly.Python.definitions_.DEFAULT_I2C_ADDR="DEFAULT_I2C_ADDR = 0x27";var r=`i2c = SoftI2C(sda=Pin(${o}), scl=Pin(${i}), freq=400000)
`;return r+`lcd = I2cLcd(i2c, DEFAULT_I2C_ADDR, ${t}, ${e})
`},Blockly.Python.char_lcd_clear=function(n){return"lcd.clear()\n"},Blockly.Python.char_lcd_putstr=function(n){var t;return"lcd.putstr("+Blockly.Python.valueToCode(n,"text",Blockly.Python.ORDER_NONE)+")\n"},Blockly.Python.char_lcd_moveto=function(n){var t=Blockly.Python.valueToCode(n,"x",Blockly.Python.ORDER_NONE),e=Blockly.Python.valueToCode(n,"y",Blockly.Python.ORDER_NONE);return"lcd.move_to("+t+", "+e+")\n"},Blockly.Python.char_lcd_backlight=function(n){var t;return"True"==Blockly.Python.valueToCode(n,"state",Blockly.Python.ORDER_NONE)?"lcd.backlight_on()\n":"lcd.backlight_off()\n"},Blockly.Python.char_lcd_display=function(n){var t;return"True"==Blockly.Python.valueToCode(n,"state",Blockly.Python.ORDER_NONE)?"lcd.display_on()\n":"lcd.display_off()\n"},Blockly.Python.rfid_rc522_init=function(n){Blockly.Python.valueToCode(n,"sck",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"mosi",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"miso",Blockly.Python.ORDER_ATOMIC);var t=Blockly.Python.valueToCode(n,"rst",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"cs",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_mfrc522="from rf import MFRC522",Blockly.Python.definitions_.import_spi="from machine import SPI";var o="spi = SPI(2, baudrate=2500000, polarity=0, phase=0)\n";return o+="spi.init()\n",o+="rdr = MFRC522(spi=spi, gpioRst="+t+",gpioCs="+e+")\n"},Blockly.Python.rfid_rc522_detect_card=function(n){var t=Blockly.Python.valueToCode(n,"stat",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"tag",Blockly.Python.ORDER_ATOMIC);return"("+t+","+e+") = rdr.request(rdr.REQIDL)\n"},Blockly.Python.rfid_rc522_anticoll=function(n){var t=Blockly.Python.valueToCode(n,"stat",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"tag",Blockly.Python.ORDER_ATOMIC);return"("+t+","+e+") = rdr.anticollFormatted()\n"},Blockly.Python.rfid_rc522_read_card=function(n){return"rdr=mfrc522.MFRC522(0,2,4,5,14)\n"},Blockly.Python.rfid_rc522_write_card=function(n){return"rdr=mfrc522.MFRC522(0,2,4,5,14)\n"},Blockly.Python.umail_init=function(n){var t=Blockly.Python.valueToCode(n,"host",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"port",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"username",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"password",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_umail="import umail","smtp = umail.SMTP("+t+","+e+",username="+o+",password="+i+")\n"},Blockly.Python.umail_send=function(n){var t=Blockly.Python.valueToCode(n,"to",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"subject",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"contents",Blockly.Python.ORDER_ATOMIC),i=e.replace("'","").replace("'",""),r=o.replace("'","").replace("'",""),a="smtp.to("+t+")\n";return a+="smtp.send('Subject: "+i+"\\n\\n"+r+"')\n",a+="smtp.quit()\n"},Blockly.Python.net_ntp_sync=function(n){var t=Blockly.Python.valueToCode(n,"tz",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_ntptime="import ntptime",Blockly.Python.definitions_.import_machine="import machine",Blockly.Python.definitions_.import_utime="import utime";var e="ntptime.settime()\n";return e+="rtc = machine.RTC()\n",e+="utc_shift="+t+"\n",e+="tm = utime.localtime(utime.mktime(utime.localtime()) + utc_shift*3600)\n",e+="tm = tm[0:3] + (0,) + tm[3:6] + (0,)\n",e+="rtc.datetime(tm)\n",e+="rtc.datetime()\n"},Blockly.Python.net_wiznet5k_init=function(n){var t=Blockly.Python.valueToCode(n,"spi",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"cs",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"rst",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_network="import utime","nic = network.WIZNET5K("+t+","+e+","+o+"\n"},Blockly.Python.net_wiznet5k_isconnected=function(n){return["WIZNET5K.isconnected()",Blockly.Python.ORDER_NONE]},Blockly.Python.net_wiznet5k_regs=function(n){return["WIZNET5K.regs()",Blockly.Python.ORDER_NONE]},Blockly.Python.net_wiznet5k_ifconfig=function(n){var t=Blockly.Python.valueToCode(n,"ip",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"subnet",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"gw",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"dns",Blockly.Python.ORDER_ATOMIC);return"nic.ifconfig(("+t+","+e+","+o+","+i+"))\n"},Blockly.Python.net_socket_connect=function(n){var t=Blockly.Python.valueToCode(n,"host",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"port",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_socket="import socket";var o="addr_info = socket.getaddrinfo("+t+","+e+")\n";return o+="addr = addr_info[0][-1]\n",o+="s = socket.socket()\n",o+="s.connect(addr)\n"},Blockly.Python.net_socket_receive=function(n){var t;return["str(s.recv("+Blockly.Python.valueToCode(n,"bytes",Blockly.Python.ORDER_ATOMIC)+"), 'utf8')",Blockly.Python.ORDER_NONE]},Blockly.Python.net_socket_send=function(n){var t;return"s.send(bytes("+Blockly.Python.valueToCode(n,"bytes",Blockly.Python.ORDER_ATOMIC)+", 'utf8'))\n"},Blockly.Python.net_socket_close=function(n){return"s.close()\n"},Blockly.Python.net_http_server_start=function(n){var t=Blockly.Python.valueToCode(n,"port",Blockly.Python.ORDER_ATOMIC);if("ESP32S2"==UI.workspace.selector.value){Blockly.Python.definitions_.import_ipaddress="import ipaddress",Blockly.Python.definitions_.import_ssl="import ssl",Blockly.Python.definitions_.import_wifi="import wifi",Blockly.Python.definitions_.import_socketpool="import socketpool";var e="pool = socketpool.SocketPool(wifi.radio)\n";e+="HOST = str(wifi.radio.ipv4_address)\n",e+="s = pool.socket(pool.AF_INET, pool.SOCK_STREAM)\n",e+="s.settimeout(None)\n",e+="s.bind((HOST, 80))\n",e+="s.listen(5)\n",e+="print('BIPES HTTP Server Listening on', HOST)\n"}else{Blockly.Python.definitions_.import_socket="import socket";var e="http_addr = socket.getaddrinfo('0.0.0.0',"+t+")[0][-1]\n";e+="s = socket.socket()\n",e+="s.bind(http_addr)\n",e+="s.listen(1)\n",e+="print('BIPES HTTP Server Listening on', http_addr)\n"}return e},Blockly.Python.net_http_server_accept=function(n){if("ESP32S2"==UI.workspace.selector.value){var t="buf = bytearray(500)\n";t+="while True:\n",t+="	conn, addr = s.accept()\n",t+='	print("Accepted from", addr)\n',t+="	size = conn.recv_into(buf, 500)\n",t+='	print("Received", buf[:size], size, "bytes")\n',t+="	lineS = str(buf[:size], 'utf8')\n",t+="	print(lineS)\n",t+="	if lineS.startswith('GET /'):\n",t+="		http_request_page = (lineS.split('/')[1]).split(' ')[0]\n",t+="		print('Request page = ' + http_request_page)\n",t+="	if size >= 20:\n",t+="		break\n"}else{var t="cl, http_addr = s.accept()\n";t+="print('client connected from', http_addr)\n",t+="cl_file = cl.makefile('rwb', 0)\n",t+="while True:\n",t+="    line = cl_file.readline()\n",t+="    lineS = str(line, 'utf8')\n",t+="    print(line)\n",t+="    if lineS.startswith('GET /'):\n",t+="        http_request_page = (lineS.split('/')[1]).split(' ')[0]\n",t+="        print('Request page = ' + http_request_page)\n",t+="    if not line or line == b'\\r\\n':\n",t+="        break\n"}return t},Blockly.Python.net_http_server_requested_page=function(n){return["http_request_page",Blockly.Python.ORDER_NONE]},Blockly.Python.net_http_server_send_response=function(n){var t=Blockly.Python.valueToCode(n,"html",Blockly.Python.ORDER_ATOMIC);if("ESP32S2"==UI.workspace.selector.value){var e="response = "+t+"\n";e+="conn.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')\n",e+="conn.send(response)\n",e+="conn.close()\n"}else{var e="response = "+t+"\n";e+="cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')\n",e+="cl.send(response)\n",e+="cl.close()\n"}return e},Blockly.Python.net_http_server_send_response_jpg=function(n){var t=Blockly.Python.valueToCode(n,"html",Blockly.Python.ORDER_ATOMIC);if("ESP32S2"==UI.workspace.selector.value){var e="response = "+t+"\n";e+="conn.send('HTTP/1.0 200 OK\\r\\nContent-type: image/jpg\\r\\n\\r\\n')\n",e+="conn.send(response)\n",e+="conn.close()\n"}else{var e="response = "+t+"\n";e+="cl.send('HTTP/1.0 200 OK\\r\\nContent-type: image/jpg\\r\\n\\r\\n')\n",e+="cl.send(response)\n",e+="cl.close()\n"}return e},Blockly.Python.net_http_server_close=function(n){return"cl.close()\n"},Blockly.Python.gsm_modem_init=function(n){return Blockly.Python.valueToCode(n,"tx",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"rx",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"bps",Blockly.Python.ORDER_ATOMIC),"#init GSM Module \n"},Blockly.Python.gsm_modem_send_at=function(n){return Blockly.Python.valueToCode(n,"cmd",Blockly.Python.ORDER_ATOMIC),"#init GSM Module AT \n"},Blockly.Python.gsm_modem_send_sms=function(n){return Blockly.Python.valueToCode(n,"dst",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"msg",Blockly.Python.ORDER_ATOMIC),"#Send SMS \n"},Blockly.Python.gsm_modem_http_get=function(n){return Blockly.Python.valueToCode(n,"cmd",Blockly.Python.ORDER_ATOMIC),"#GSM Module HTTP GET\n"},Blockly.Python.gsm_modem_response=function(n){return Blockly.Python.valueToCode(n,"timeout",Blockly.Python.ORDER_ATOMIC),["#GSM Module Response \n",Blockly.Python.ORDER_NONE]},Blockly.Python.uart_init=function(n){Blockly.Python.valueToCode(n,"port",Blockly.Python.ORDER_ATOMIC);var t=Blockly.Python.valueToCode(n,"speed",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"bits",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"par",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"stop",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_machine_uart="from machine import uart";var r="uart = UART(1, 9600)\n";return r+("uart.init("+t+", bits="+e+", parity="+o+", stop="+i+")\n")},Blockly.Python.uart_write=function(n){var t;return"uart.write("+Blockly.Python.valueToCode(n,"buf",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.uart_read=function(n){var t;return["uart.read("+Blockly.Python.valueToCode(n,"s",Blockly.Python.ORDER_ATOMIC)+")",Blockly.Python.ORDER_NONE]},Blockly.Python.uart_read_all=function(n){return["uart.read()",Blockly.Python.ORDER_NONE]},Blockly.Python.uart_readline=function(n){return["uart.readline()",Blockly.Python.ORDER_NONE]},Blockly.Python.uart_read_into=function(n){var t;return["uart.readinto("+Blockly.Python.valueToCode(n,"buffer",Blockly.Python.ORDER_ATOMIC)+")",Blockly.Python.ORDER_NONE]},Blockly.Python.max30100_init=function(n){return Blockly.Python.valueToCode(n,"scl",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"sda",Blockly.Python.ORDER_ATOMIC),"#TODO: init max30100\n"},Blockly.Python.max30100_read=function(n){return"#read max30100\n"},Blockly.Python.max30100_red=function(n){return["1",Blockly.Python.ORDER_NONE]},Blockly.Python.max30100_ir=function(n){return["2",Blockly.Python.ORDER_NONE]},Blockly.Python.gps_init=function(n){return Blockly.Python.valueToCode(n,"tx",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"rx",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"bps",Blockly.Python.ORDER_ATOMIC),"#TODO: init GPS\n"},Blockly.Python.gps_update=function(n){return"#update gps \n"},Blockly.Python.gps_get_lat=function(n){return["gps_lat",Blockly.Python.ORDER_NONE]},Blockly.Python.gps_get_long=function(n){return["gps_long",Blockly.Python.ORDER_NONE]},Blockly.Python.gps_get_height=function(n){return["gps_speed",Blockly.Python.ORDER_NONE]},Blockly.Python.gps_get_speed=function(n){return["gps_speed",Blockly.Python.ORDER_NONE]},Blockly.Python.gps_get_datetime=function(n){return["gps_datetime",Blockly.Python.ORDER_NONE]},Blockly.Python.encoder_init=function(n){var t=Blockly.Python.valueToCode(n,"p0",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"p1",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"button",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_["import time"]="import time",Blockly.Python.definitions_["import encoder"]="from rotaryencoder import RotaryEncoder","encoder = RotaryEncoder(pin_clk="+t+",pin_dt="+e+",pin_sw="+o+",min_val=0, max_val=100)\n"},Blockly.Python.encoder_reset=function(n){return"encoder.reset(0)\n"},Blockly.Python.encoder_read=function(n){return["encoder.read()",Blockly.Python.ORDER_NONE]},Blockly.Python.encoder_button=function(n){return["encoder.check_button()",Blockly.Python.ORDER_NONE]},Blockly.Python.stepper_init=function(n){var t=Blockly.Python.valueToCode(n,"p0",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"p1",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"p2",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"p3",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_time="import time",`
pins = [
    Pin(`+t+`, Pin.OUT),  # 1
    Pin(`+e+`, Pin.OUT),  # 2
    Pin(`+o+`, Pin.OUT),  # 4
    Pin(`+i+`, Pin.OUT),  # 8
]

phases = [ 1, 5, 4, 6, 2, 10, 8, 9 ]
`},Blockly.Python.stepper_step=function(n){return Blockly.Python.valueToCode(n,"steps",Blockly.Python.ORDER_ATOMIC),`
for phase in phases:
	for n, p in enumerate(pins):
		pins[n](phase & 1 << n)
	time.sleep(0.001)
`},Blockly.Python.dc_motor_init=function(n){var t=n.getFieldValue("motor_name"),e=Blockly.Python.valueToCode(n,"pwm",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"dir1",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"dir2",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_pwm="from machine import PWM";var r=t+"_pin_a = Pin("+o+", Pin.OUT)\n";return r+=t+"_pin_b = Pin("+i+", Pin.OUT)\n",r+=t+"_pwm = PWM(Pin("+e+"))\n",r+=t+"_pwm.freq(1000)\n"},Blockly.Python.dc_motor_power=function(n){var t,e=n.getFieldValue("motor_name");return e+"_pwm.duty("+Blockly.Python.valueToCode(n,"power",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.dc_motor_direction=function(n){var t=n.getFieldValue("motor_name"),e=Blockly.Python.valueToCode(n,"dir",Blockly.Python.ORDER_ATOMIC),o="";return"0"===e?(o=t+"_pin_a.value(0)\n",o+=t+"_pin_b.value(0)\n"):"1"===e?(o=t+"_pin_a.value(1)\n",o+=t+"_pin_b.value(0)\n"):"2"===e?(o=t+"_pin_a.value(0)\n",o+=t+"_pin_b.value(1)\n"):"3"===e&&(o=t+"_pin_a.value(1)\n",o+=t+"_pin_b.value(1)\n"),o},Blockly.Python.dc_motor_stop=function(n){var t=n.getFieldValue("motor_name"),e=t+"_pin_a.value(0)\n";return e+(t+"_pin_b.value(0)\n")},Blockly.Python.esp32_can_init=function(n){return Blockly.Python.valueToCode(n,"mode",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"baudrate",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"extframe",Blockly.Python.ORDER_ATOMIC),Blockly.Python.definitions_.import_can="from machine import CAN","can = CAN(0, extframe=True, mode=CAN.LOOPBACK, baudrate=500)\n"},Blockly.Python.esp32_can_filter=function(n){return Blockly.Python.valueToCode(n,"filter",Blockly.Python.ORDER_ATOMIC),"can.setfilter(0, CAN.FILTER_ADDRESS, [0x102, 0]) \n"},Blockly.Python.esp32_can_send=function(n){return Blockly.Python.valueToCode(n,"id",Blockly.Python.ORDER_ATOMIC),Blockly.Python.valueToCode(n,"data",Blockly.Python.ORDER_ATOMIC),"can.send([1,2,3], 0x102) \n"},Blockly.Python.esp32_can_recv=function(n){return["can.recv()",Blockly.Python.ORDER_NONE]},Blockly.Python.python_try_catch=function(n){var t=Blockly.Python.statementToCode(n,"try"),e=Blockly.Python.statementToCode(n,"catch");return"try:\n"+t+"except:\n"+e+"\n"},Blockly.Python.try_except_oserror=function(n){var t=Blockly.Python.statementToCode(n,"TRY"),e=Blockly.Python.statementToCode(n,"EXCEPT");return"try:\n"+t+"except OSError as e:\n"+e},Blockly.Python.neopixel_color_numbers=function(n){var t=Blockly.Python.valueToCode(n,"red",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"green",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"blue",Blockly.Python.ORDER_ATOMIC);return this.styleBlock([t,e,o]),[`(${t},${e},${o})`,Blockly.Python.ORDER_NONE]},Blockly.Python.neopixel_color_colors=function(n){var t=n.getFieldValue("color"),e=Tool.HEX2RGB(t);return[`(${e.r},${e.g},${e.b})`,Blockly.Python.ORDER_NONE]},Blockly.Python.HSL_to_RGB=function(n){var t=Blockly.Python.valueToCode(n,"hue",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"saturation",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"lightness",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.HSL_to_RGB="def HSL_to_RGB(h, s, l):\n	h, s, l = h/360, s/100, l/100\n	def hue2rgb (p, q, t):\n		if(t < 0.): t += 1\n		if(t > 1.): t -= 1\n		if(t < 1/6): return p + (q - p) * 6 * t\n		if(t < 1/2): return q\n		if(t < 2/3): return p + (q - p) * (2/3 - t) * 6\n		return p\n	q = l * (1 + s) if l < 0.5 else l + s - l * s\n	p = 2 * l - q\n	r, g, b = hue2rgb(p, q, h + 1/3), hue2rgb(p, q, h), hue2rgb(p, q, h - 1/3)\n	return (int(r * 255), int(g * 255), int(b * 255))\n",this.styleBlock([t,e,o]),[`HSL_to_RGB(${t},${e},${o})`,Blockly.Python.ORDER_NONE]},Blockly.Python.neopixel_init=function(n){var t;return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_neopixel="import neopixel",`np=neopixel.NeoPixel(Pin(${Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_NONE)}),${Blockly.Python.valueToCode(n,"number",Blockly.Python.ORDER_NONE)})
`},Blockly.Python.neopixel_control_CPY=function(n){Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_NONE);var t=Blockly.Python.valueToCode(n,"color",Blockly.Python.ORDER_NONE);return Blockly.Python.definitions_.import_board="import board",Blockly.Python.definitions_.import_neopixel_write="import neopixel_write",Blockly.Python.definitions_.import_digitalio="import digitalio",Blockly.Python.definitions_.import_neopixel_init="try:\n	neopixel_pin.deinit()\nexcept:\n	pass\nneopixel_pin = digitalio.DigitalInOut(board.NEOPIXEL)\nneopixel_pin.direction = digitalio.Direction.OUTPUT","pixel = bytearray("+t+")\nt=pixel[0]\npixel[0]=pixel[1]\npixel[1]=t\nneopixel_write.neopixel_write(neopixel_pin, pixel)\n"},Blockly.Python.neopixel_control=function(n){var t;return`np[${Blockly.Python.valueToCode(n,"address",Blockly.Python.ORDER_NONE)}]=${Blockly.Python.valueToCode(n,"color",Blockly.Python.ORDER_NONE)}
`},Blockly.Python.neopixel_write=function(n){return"np.write()\n"},Blockly.Python.bipes_plot=function(n){var t;return`print('$BIPES-DATA:',${Blockly.Python.valueToCode(n,"id",Blockly.Python.ORDER_NONE)||"''"},',',${Blockly.Python.valueToCode(n,"values",Blockly.Python.ORDER_NONE)||"''"})
`},Blockly.Python.localstorage_store=function(n){for(var t=n.getFieldValue("topic"),e=Array(n.itemCount_),o=0;o<n.itemCount_;o++)e[o]=Blockly.Python.valueToCode(n,"ADD"+o,Blockly.Python.ORDER_NONE)||"None";return`print('$${t}:',${e.join(",',',")})
`},Blockly.Python.bluetooth_repl_start=function(n){var t;return Blockly.Python.definitions_.import_bluetoot_repl="import ble_uart_repl","ble_uart_repl.start("+Blockly.Python.valueToCode(n,"name",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.bluetooth_repl_setup=function(n){return Blockly.Python.definitions_.import_bluetoot_repl="import ble_uart_repl","\n"},Blockly.Python.st7789_init=function(n){var t=Blockly.Python.valueToCode(n,"bl",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"sck",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"mosi",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"reset",Blockly.Python.ORDER_ATOMIC),r=Blockly.Python.valueToCode(n,"cs",Blockly.Python.ORDER_ATOMIC),a=Blockly.Python.valueToCode(n,"dc",Blockly.Python.ORDER_ATOMIC),u=Blockly.Python.valueToCode(n,"spi",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_machine="import machine",Blockly.Python.definitions_.import_st7789py="from tftdisplay import st7789py",Blockly.Python.definitions_.import_st7789bl1="st7789_bl = machine.Pin("+t+", machine.Pin.OUT)",Blockly.Python.definitions_.import_st7789bl2="st7789_blp=machine.PWM(st7789_bl)";var h="st7789_blp.duty(100)\n";return h+="spi = machine.SPI("+u+", baudrate=20000000, polarity=1, phase=1, sck=machine.Pin("+e+"), mosi=machine.Pin("+o+"))\n",h+="display7789 = st7789py.ST7789(spi, 135, 240, reset=machine.Pin("+i+", machine.Pin.OUT), cs=machine.Pin("+r+", machine.Pin.OUT), dc=machine.Pin("+a+", machine.Pin.OUT))\n",h+="display7789.init()\n"},Blockly.Python.st7789_bl_power=function(n){var t;return"st7789_blp.duty("+Blockly.Python.valueToCode(n,"val",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.st7789_color_numbers=function(n){var t=Blockly.Python.valueToCode(n,"red",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"green",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"blue",Blockly.Python.ORDER_ATOMIC);return this.styleBlock([t,e,o]),[`(${t},${e},${o})`,Blockly.Python.ORDER_NONE]},Blockly.Python.st7789_color_colors=function(n){var t=n.getFieldValue("color"),e=Tool.HEX2RGB(t);return[`(${e.r},${e.g},${e.b})`,Blockly.Python.ORDER_NONE]},Blockly.Python.st7789_fill=function(n){var t=Blockly.Python.valueToCode(n,"r",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"g",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"b",Blockly.Python.ORDER_ATOMIC);return"display7789.fill(st7789py.color565("+t+", "+e+", "+o+"))\n"},Blockly.Python.st7789_pixel=function(n){var t=Blockly.Python.valueToCode(n,"x",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"y",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"color",Blockly.Python.ORDER_ATOMIC);return"display7789.pixel("+t+", "+e+", st7789py.color565"+o+")\n"},Blockly.Python.st7789_line=function(n){var t=Blockly.Python.valueToCode(n,"x0",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"x1",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"y0",Blockly.Python.ORDER_ATOMIC),i=Blockly.Python.valueToCode(n,"y1",Blockly.Python.ORDER_ATOMIC),r=Blockly.Python.valueToCode(n,"color",Blockly.Python.ORDER_ATOMIC);return"display7789.line("+t+","+o+","+e+","+i+", st7789py.color565"+r+")\n"},Blockly.Python["control_pid.__init__"]=function(n){var t=n.getFieldValue("ID"),e=n.getFieldValue("Kp"),o=n.getFieldValue("Ki"),i=n.getFieldValue("Kd"),r=n.getFieldValue("SAMPLETIME");r=0==parseInt(r)?"None":r;var a=n.getFieldValue("SCALE"),u=Blockly.Python.valueToCode(n,"SETPOINT",Blockly.Python.ORDER_NONE);this.check([e,o,i],r),Blockly.Python.definitions_.import_pid="from control import PID";let h=`pid${t} = PID(${e}, ${o}, ${i}, setpoint=${u}, scale='${a}'`;return 0!=r?`${h}, sample_time=${r})
`:`${h})
`},Blockly.Python["control_pid.compute"]=function(n){var t;return[`pid${n.getFieldValue("ID")}(${Blockly.Python.valueToCode(n,"INPUT",Blockly.Python.ORDER_NONE)})`,Blockly.Python.ORDER_NONE]},Blockly.Python["control_pid.compute_not_realtime"]=function(n){var t,e=n.getFieldValue("ID");return[`pid${e}(${Blockly.Python.valueToCode(n,"INPUT",Blockly.Python.ORDER_NONE)},${Blockly.Python.valueToCode(n,"DT",Blockly.Python.ORDER_NONE)})`,Blockly.Python.ORDER_NONE]},Blockly.Python["control_pid.tunings"]=function(n){var t,e=n.getFieldValue("ID"),o=Blockly.Python.valueToCode(n,"KP",Blockly.Python.ORDER_NONE);return`pid${e}.tunings = (${o}, ${Blockly.Python.valueToCode(n,"KI",Blockly.Python.ORDER_NONE)}, ${Blockly.Python.valueToCode(n,"KD",Blockly.Python.ORDER_NONE)})
`},Blockly.Python["control_pid.setpoint"]=function(n){var t;return`pid${n.getFieldValue("ID")}.setpoint = ${Blockly.Python.valueToCode(n,"SETPOINT",Blockly.Python.ORDER_NONE)}
`},Blockly.Python["control_pid.output_limits"]=function(n){var t,e=n.getFieldValue("ID");return`pid${e}.output_limits = (${n.getFieldValue("LOWER")}, ${n.getFieldValue("UPPER")})
`},Blockly.Python["control_pid.auto_mode"]=function(n){var t;return`pid${n.getFieldValue("ID")}.auto_mode = ${"TRUE"==n.getFieldValue("ENABLE")?"True":"False"}
`},Blockly.Python["control_pid.vars"]=function(n){var t;return[`pid${n.getFieldValue("ID")}.${n.getFieldValue("VARS")}`,Blockly.Python.ORDER_NONE]},UPythonClass.WaterBoiler=`class WaterBoiler:
    """
    Simple simulation of a water boiler which can heat up water
    and where the heat dissipates slowly over time
    """

    def __init__(self, dissipation=0.2):
        self.water_temp = 20
        self.ambient = 20
        self.dissipation = dissipation
        self._last_time = utime.ticks_ms()

    def update(self, boiler_power):
    	now = utime.ticks_ms()
    	dt = utime.ticks_diff(now,self._last_time) if (utime.ticks_diff(now,self._last_time)) else 1e-16
        if boiler_power > 0:
        	# Boiler can only produce heat, not cold
        	self.water_temp += 1 * boiler_power * dt / 1000

        # Some heat dissipation
        self.water_temp -= (self.water_temp - self.ambient) * self.dissipation * dt

        self._last_time = now
        return self.water_temp`,Blockly.Python.simulate_water_boiler=function(n){var t=n.getFieldValue("ID"),e=n.getFieldValue("DISSIPATION"),o=Blockly.Python.valueToCode(n,"POWER",Blockly.Python.ORDER_NONE);return Blockly.Python.definitions_.import_utime="import utime",Blockly.Python.definitions_.simulate_water_boiler_class=UPythonClass.WaterBoiler,Blockly.Python.definitions_[`simulate_water_boiler_obj${t}`]=`water_boiler${t} = WaterBoiler(${e})`,[`water_boiler${t}.update(${o})`,Blockly.Python.ORDER_NONE]},UPythonClass.DCMotor=`class DCMotor:

    def __init__ (
    	self,
    	Ra=0.52,
    	La=0.000036,
    	B=0.00001,
    	J=0.000012,
    	Kbemf=0.0137,
    	STATIC_FRICTION=0.01,
    	FRICTION_S=0.01
    ):
        self.bemf = 0.0
        # omega = rpm ( w )
        self.omega = 0.0

        # theta = electrical angle normalized to 2*pi
        self.theta = 0.0

        self.ia, self.va = 0.0, 0.0

        self.Pelec, self.Te, self.Tl = 0.0, 0.0, 0.0

        # La here is La subtracted by mutual inductance M.
        self.Ra, self.La, self.B, self.J = Ra, La, B, J
        self.Kbemf = Kbemf
        self.STATIC_FRICTION, self.FRICTION_S = STATIC_FRICTION, FRICTION_S

        self._last_time = 0.0


    # The simulator
    def sim( self, load, va, dt):
    	now = utime.ticks_us()

        # Set the load
        sign = math.copysign( 1, self.omega )
        self.Tl = sign * load
        self.va = va

        # Calculate bemf
        self.bemf = self.Kbemf * self.omega

        # Calculate change in current per di/dt
        dot_ia = (1.0 / self.La) * ( self.va - (self.Ra * self.ia) - self.bemf )

        # Apply changes to current in phases
        self.ia += dot_ia * dt

        # Electrical torque. Since omega can be null, cannot derive from P/w
        self.Te = self.Kbemf * self.ia

        # Electrical power
        self.Pelec = self.bemf * self.ia


        # Mechanical torque.
        # mtorque = ((etorque * (p->m->NbPoles / 2)) - (p->m->damping * sv->omega) - p->pv->torque);
        self.Tm = ((self.Te) - (sign * self.B * abs(self.omega)) - self.Tl)

        # Friction calculations
        if abs(self.omega) < 1.0:
            if abs(self.Te) < self.STATIC_FRICTION:
                self.Tm = 0.0
            else:
                self.Tm -= self.STATIC_FRICTION
        else:
           self.Tm = self.Tm - sign * ( self.STATIC_FRICTION * math.exp( -5 * abs( self.omega )) + self.FRICTION_S )

        # J is the moment of inertia
        dotOmega = (self.Tm / self.J)
        self.omega = self.omega + dotOmega * dt


        self.theta += self.omega * dt
        self.theta = self.theta % ( 2.0 * math.pi )

        self._last_time += dt
        return self.omega`,Blockly.Python["simulate_dcmotor.sim"]=function(n){var t=n.getFieldValue("ID"),e=n.getFieldValue("RA"),o=n.getFieldValue("LA"),i=n.getFieldValue("B"),r=n.getFieldValue("J"),a=n.getFieldValue("KBEMF"),u=n.getFieldValue("STATIC_FRICTION"),h=Blockly.Python.valueToCode(n,"LOAD",Blockly.Python.ORDER_NONE),s=Blockly.Python.valueToCode(n,"DT",Blockly.Python.ORDER_NONE),l=Blockly.Python.valueToCode(n,"POWER",Blockly.Python.ORDER_NONE);return Blockly.Python.definitions_.import_utime="import utime",Blockly.Python.definitions_.import_math="import math",Blockly.Python.definitions_.simulate_dcmotor_class=UPythonClass.DCMotor,Blockly.Python.definitions_[`simulate_dcmotor_obj${t}`]=`dcmotor${t} = DCMotor(${e},${o},${i},${r},${a},${u},0)`,[`dcmotor${t}.sim(${h},${l},${s})`,Blockly.Python.ORDER_NONE]},Blockly.Python["simulate_dcmotor.vars"]=function(n){var t;return[`dcmotor${n.getFieldValue("ID")}.${n.getFieldValue("VARS")}`,Blockly.Python.ORDER_NONE]},Blockly.Python.esp32_cam_init=function(n){return Blockly.Python.definitions_.import_camera="import camera","camera.init(1)\n"},Blockly.Python.esp32_cam_capture=function(n){return Blockly.Python.definitions_.import_camera="import camera",["camera.capture()",Blockly.Python.ORDER_NONE]},Blockly.Python.esp32_cam_red_led=function(n){var t=Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.gpio_set="def gpio_set(pin,value):\n  if value >= 1:\n    Pin(pin, Pin.OUT).on()\n  else:\n    Pin(pin, Pin.OUT).off()","gpio_set(33, "+t+")\n"},Blockly.Python.esp32_cam_white_led=function(n){var t=Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.gpio_set="def gpio_set(pin,value):\n  if value >= 1:\n    Pin(pin, Pin.OUT).on()\n  else:\n    Pin(pin, Pin.OUT).off()","gpio_set(4, "+t+")\n"},Blockly.Python.rtttl_play=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"song",Blockly.Python.ORDER_ATOMIC);return Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_rtttl="from tones import rtttl",Blockly.Python.definitions_.import_songs="from tones import songs","play = rtttl.play(Pin("+t+", Pin.OUT), songs.find("+e+")) \n"},Blockly.Python.tone=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"frequency",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"duration",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_pwm="from machine import PWM",Blockly.Python.definitions_.import_time="import time";var i=t.replace("(","").replace(")",""),r="pwm"+i+" = PWM(Pin("+i+"), freq="+e+",  duty=512)\n";return 0==parseFloat(o)?r+="":r+="time.sleep("+o+")\npwm"+i+".deinit()\n",r},Blockly.Python.note=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"note",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"duration",Blockly.Python.ORDER_ATOMIC);Blockly.Python.definitions_.import_pin="from machine import Pin",Blockly.Python.definitions_.import_pwm="from machine import PWM",Blockly.Python.definitions_.import_time="import time";var i=t.replace("(","").replace(")",""),r="pwm"+i+" = PWM(Pin("+i+"), freq="+e+",  duty=512)\n";return 0==parseFloat(o)?r+="":r+="time.sleep("+o+")\npwm"+i+".deinit()\n",r},Blockly.Python.tone_type=function(n){var t;return[n.getFieldValue("tone"),Blockly.JavaScript.ORDER_NONE]},Blockly.Python.snek_uptime=function(n){return["time.monotonic()",Blockly.Python.ORDER_NONE]},Blockly.Python.snek_delay=function(n){var t;return"time.sleep("+Blockly.Python.valueToCode(n,"time",Blockly.Python.ORDER_ATOMIC)+")\n"},Blockly.Python.snek_adc=function(n){var t;return["read("+Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC).replace("(","").replace(")","")+")",Blockly.Python.ORDER_NONE]},Blockly.Python.snek_setpower=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"duty",Blockly.Python.ORDER_ATOMIC),o=t.replace("(","").replace(")","");e>1&&(e=1),e<0&&(e=0);var i="talkto("+o+")\n";return i+("setpower("+e+")\n")},Blockly.Python.snek_gpio_set=function(n){var t=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC),o="talkto("+t.replace("(","").replace(")","")+")\n";return"True"==e&&(o+="on()\n"),"False"==e&&(o+="off()\n"),o},Blockly.Python.snek_gpio_get=function(n){var t;return["read("+Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC).replace("(","").replace(")","")+")",Blockly.Python.ORDER_NONE]},Blockly.Python.google_spreadsheet=function(n){Blockly.Python.definitions_.import_prequests="import prequests",Blockly.Python.definitions_.import_ujson="import ujson";var t=n.getFieldValue("sheet_num"),e=Blockly.Python.valueToCode(n,"deploy_code",Blockly.Python.ORDER_ATOMIC),o=n.getInputTargetBlock("cells_values");if(Blockly.Python.definitions_.post_data='def post_data(row_data, deployment_code):\n  request_data = ujson.dumps({"parameters": row_data})\n  r = prequests.post("https://script.google.com/macros/s/" + deployment_code + "/exec", headers = {"content-type": "application/json"}, data = request_data)\n  r.close()',Blockly.Python.definitions_["deployment_code"+t]="deployment_code"+t+"= "+e,Blockly.Python.definitions_["row_data_"+t]="row_data"+t+" = {}",o)var i=0;var r="";do r+=" row_data"+t+'["var'+i+'"] = '+Blockly.Python.blockToCode(o,"Cell")+"\n",i++;while(o=o.getNextBlock());return Blockly.Python.definitions_["row_data_cell"+t]="def update_row_data"+t+"():\n"+r,"update_row_data"+t+"()\npost_data(row_data"+t+",deployment_code"+t+")\n"},Blockly.Python.cell_value=function(n){var t;return Blockly.Python.valueToCode(n,"value",Blockly.Python.ORDER_ATOMIC)},Blockly.Python.rain_init=function(n){Blockly.Python.definitions_.import_machine="import machine";var t=Blockly.Python.valueToCode(n,"Function",Blockly.Python.ORDER_ATOMIC);return"rainmetro=machine.Pin("+Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC)+",machine.Pin.IN,machine.Pin.PULL_UP) \nrainmetro.irq(trigger=machine.Pin.IRQ_FALLING,handler="+t.replace("'","").replace("'","")+")\n"},Blockly.Python.rain_stop=function(n){return Blockly.Python.definitions_.import_machine="import machine","rainmetro.irq(trigger=0,handler="+Blockly.Python.valueToCode(n,"Function",Blockly.Python.ORDER_ATOMIC).replace("'","").replace("'","")+")\n"},Blockly.Python.anemo_init=function(n){Blockly.Python.definitions_.import_machine="import machine";var t=Blockly.Python.valueToCode(n,"Function",Blockly.Python.ORDER_ATOMIC);return"anemometro=machine.Pin("+Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC)+",machine.Pin.IN,machine.Pin.PULL_UP) \nanemometro.irq(trigger=machine.Pin.IRQ_FALLING,handler="+t.replace("'","").replace("'","")+")\n"},Blockly.Python.anemo_stop=function(n){return Blockly.Python.definitions_.import_machine="import machine","anemometro.irq(trigger=0,handler="+Blockly.Python.valueToCode(n,"Function",Blockly.Python.ORDER_ATOMIC).replace("'","").replace("'","")+")\n"},Blockly.Python.inter_init=function(n){Blockly.Python.definitions_.import_machine="import machine";var t=Blockly.Python.valueToCode(n,"Nome",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"Function",Blockly.Python.ORDER_ATOMIC),o=Blockly.Python.valueToCode(n,"pin",Blockly.Python.ORDER_ATOMIC);return""+t.replace("'","").replace("'","")+"=machine.Pin("+o+", machine.Pin.IN, machine.Pin.PULL_UP) \n"+t.replace("'","").replace("'","")+".irq(trigger=machine.Pin.IRQ_FALLING, handler="+e.replace("'","").replace("'","")+")\n"},Blockly.Python.try_catch=function(n){var t=Blockly.Python.statementToCode(n,"main_code"),e=Blockly.Python.statementToCode(n,"catch_code");return"try:\n"+t+"\nexcept:\n"+e},Blockly.Python.http_get_status=function(n){var t;return[Blockly.Python.nameDB_.getName(n.getFieldValue("request"),Blockly.VARIABLE_CATEGORY_NAME)+".status_code",Blockly.Python.ORDER_NONE]},Blockly.Python.http_get_content=function(n){var t;return["str("+Blockly.Python.nameDB_.getName(n.getFieldValue("request"),Blockly.VARIABLE_CATEGORY_NAME)+".content)",Blockly.Python.ORDER_NONE]},Blockly.Python.configure_and_start_bluetooth=function(n){var t=n.getFieldValue("BLUETOOTH_NAME");return`
import bluetooth
import time
from machine import Pin
from micropython import const
from ble import advertising_payload

_IRQ_CENTRAL_CONNECT = const(1)
_IRQ_CENTRAL_DISCONNECT = const(2)
_IRQ_GATTS_WRITE = const(3)

_FLAG_WRITE = const(0x0008)
_FLAG_NOTIFY = const(0x0010)

_UART_UUID = bluetooth.UUID("6E400001-B5A3-F393-E0A9-E50E24DCCA9E")
_UART_TX = (
    bluetooth.UUID("6E400003-B5A3-F393-E0A9-E50E24DCCA9E"),
    _FLAG_NOTIFY,
)
_UART_RX = (
    bluetooth.UUID("6E400002-B5A3-F393-E0A9-E50E24DCCA9E"),
    _FLAG_WRITE,
)
_UART_SERVICE = (
    _UART_UUID,
    (_UART_TX, _UART_RX),
)

_ADV_APPEARANCE_GENERIC_COMPUTER = const(128)

class BLEUART:
    def __init__(self, ble, name="${t}", rxbuf=100):
        self._ble = ble
        self._ble.active(True)
        self._ble.irq(self._irq)
        ((self._tx_handle, self._rx_handle),) = self._ble.gatts_register_services((_UART_SERVICE,))
        self._ble.gatts_set_buffer(self._rx_handle, rxbuf, True)
        self._connections = set()
        self._payload = advertising_payload(name=name, services=[_UART_UUID])
        self._advertise()
        self._handler = None  # Adiciona o atributo handler para armazenar a Function de callback
        print("BLE Inicializado e an\xfancio iniciado.")

    def irq(self, handler):
        # M\xe9todo para registrar a Function de callback
        self._handler = handler

    def _irq(self, event, data):
        if event == _IRQ_CENTRAL_CONNECT:
            conn_handle, _, _ = data
            self._connections.add(conn_handle)
            print('Conectado')
        elif event == _IRQ_CENTRAL_DISCONNECT:
            conn_handle, _, _ = data
            if conn_handle in self._connections:
                self._connections.remove(conn_handle)
            self._advertise()
            print('Desconectado')
        elif event == _IRQ_GATTS_WRITE:
            conn_handle, value_handle = data
            if conn_handle in self._connections and value_handle == self._rx_handle:
                global received_data
                received_data = self._ble.gatts_read(self._rx_handle).decode('utf-8')
                print("Dados recebidos:", received_data)
                if self._handler:
                    self._handler()  # Chama o handler registrado se existir

    def write(self, data):
        for conn_handle in self._connections:
            self._ble.gatts_notify(conn_handle, self._tx_handle, data)

    def close(self):
        for conn_handle in self._connections:
            self._ble.gap_disconnect(conn_handle)
        self._connections.clear()

    def _advertise(self, interval_us=500000):
        self._ble.gap_advertise(interval_us, adv_data=self._payload)
        print("An\xfancio de Bluetooth ativo.")

ble = bluetooth.BLE()
uart = BLEUART(ble, name="${t}")
received_data = None
`},Blockly.Python.handle_ble_data=function(n){var t=Blockly.Python.valueToCode(n,"VAR",Blockly.Python.ORDER_ATOMIC);return`def handle_ble_data():
    global received_data, ${t}  # Declara received_data e a vari\xe1vel escolhida como globais
    if received_data:
        ${t} = received_data  # Armazena os dados recebidos na vari\xe1vel escolhida
        received_data = None  # Limpa os dados ap\xf3s o processamento
`},Blockly.Python.verificar_dados_ble=function(n){return`
if received_data:
    handle_ble_data()  # Processa os dados recebidos
`},Blockly.Python.show_received_data=function(n){return["received_data",Blockly.Python.ORDER_ATOMIC]},Blockly.Python.configurar_plotter_dados=function(n){for(var t=n.sensorCount_,e="def formatar_dados_para_plotter():\n",o=[],i=0;i<t;i++){var r=Blockly.Python.valueToCode(n,"SENSOR_"+i,Blockly.Python.ORDER_ATOMIC);r&&(o.push(r),e+="    global "+r+"\n")}return o.length>0?(e+='    plotter_data = "'+o.map(function(n,t){return"{}"}).join(", ")+'{}".format('+o.join(", ")+", chr(0x0A))\n",e+="    uart.write(plotter_data)\n"):e+="    pass  # Nenhum sensor configurado\n",e},Blockly.Python.enviar_dados_ble=function(n){return`
formatar_dados_para_plotter()  # Chama a Function que formata e envia os dados ao plotter
  `},Blockly.Python.chamar_formatar_dados_plotter=function(n){return"formatar_dados_para_plotter()\n"},Blockly.Python.math_min=function(n){var t=Blockly.Python.valueToCode(n,"VALUE1",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"VALUE2",Blockly.Python.ORDER_ATOMIC);return["min("+t+", "+e+")",Blockly.Python.ORDER_FUNCTION_CALL]},Blockly.Python.math_max=function(n){var t=Blockly.Python.valueToCode(n,"VALUE1",Blockly.Python.ORDER_ATOMIC),e=Blockly.Python.valueToCode(n,"VALUE2",Blockly.Python.ORDER_ATOMIC);return["max("+t+", "+e+")",Blockly.Python.ORDER_FUNCTION_CALL]};