"use strict";/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */ function svgToPng_(e,t,s,i){var a=document.createElement("canvas"),r=a.getContext("2d"),n=new Image,l=10;a.width=t*l,a.height=s*l,n.onload=function(){r.drawImage(n,0,0,t,s,0,0,a.width,a.height);try{var e=a.toDataURL("image/png");i(e)}catch(l){console.warn("Error converting the workspace svg to a png"),i("")}},n.src=e}function workspaceToSvg_(e,t,s){for(var i=document.getElementsByTagName("textarea"),a=0;a<i.length;a++)i[a].innerHTML=i[a].value;var r=e.getBlocksBoundingBox(),n=r.x||r.left,l=r.y||r.top,o=r.width||r.right-n,c=r.height||r.bottom-l,d=e.getCanvas().cloneNode(!0);d.removeAttribute("transform");var u=document.createElementNS("http://www.w3.org/2000/svg","svg");u.setAttribute("xmlns","http://www.w3.org/2000/svg"),u.appendChild(d),u.setAttribute("viewBox",n+" "+l+" "+o+" "+c),u.setAttribute("class","blocklySvg "+(e.options.renderer||"geras")+"-renderer "+(e.getTheme?e.getTheme().name+"-theme":"")),u.setAttribute("width",o),u.setAttribute("height",c),u.setAttribute("style","background-color: transparent");var f=[].slice.call(document.head.querySelectorAll("style")).filter(function(e){return/\.blocklySvg/.test(e.innerText)||0===e.id.indexOf("blockly-")}).map(function(e){return e.innerText}).join("\n"),h=document.createElement("style");h.innerHTML=f+"\n"+s,u.insertBefore(h,u.firstChild);var p=(new XMLSerializer).serializeToString(u);svgToPng_("data:image/svg+xml,"+encodeURIComponent(p=p.replace(/&nbsp/g,"&#160")),o,c,t)}Blockly.downloadScreenshot=function(e){workspaceToSvg_(e,function(e){var t=document.createElement("a");t.download="screenshot.png",t.target="_self",t.href=e,document.body.appendChild(t),t.click(),t.parentNode.removeChild(t)})};class Tool{constructor(){}static runPython(e){let t=void 0==e?Blockly.Python.workspaceToCode(Code.workspace):e;t&&(t+="\r\r",mux.bufferPush(`\x05${t}\x04`),UI.progress.start(Channel.websocket.buffer_.length))}static stopPython(){mux.bufferPush("\x03\x03")}static softReset(){Channel.websocket.connected?setTimeout(()=>{Channel.websocket.connect(UI.workspace.websocket.url.value,UI.workspace.websocket.pass.value)},2e3):Channel.webbluetooth.connected&&setTimeout(()=>{Channel.webbluetooth.connect()},1e3),mux.bufferPush("\x04")}static asleep(e){return new Promise(t=>setTimeout(t,e))}static sleep(e){let t=Date.now(),s=null;do s=Date.now();while(s-t<e)}static updateSourceCode(e,t){let s=new FileReader;s.addEventListener("loadend",e=>{let s=e.srcElement.result;Files.editor.getDoc().setValue(s),UI.workspace.content_file_name.value=t}),s.readAsText(e)}static blocksToPython(){let e=Blockly.Python.workspaceToCode(Code.workspace);Files.editor.getDoc().setValue(e)}static decode_resp(e){return 87!=e[0]||66!=e[1]?-1:e[2]|e[3]<<8}static unix2date(e){let t,s=(t=new Date(void 0==e?+new Date:e)).getHours(),i="0"+t.getMinutes(),a="0"+t.getSeconds();return s+":"+i.substr(-2)+":"+a.substr(-2)}static bipesVerify(){let e=/\r\n\$(.*):(.*)\r\n/,t;if(e.test(Files.received_string)&&3==(t=Files.received_string.match(e)).length){let s=t[2].split(",").map(e=>e=parseFloat(e));if(window.frames[3].modules.DataStorage.push(t[1],s),"BIPES-DATA"==t[1]){s[0]=parseInt(s[0]),s[1]=parseFloat(s[1]);new Queue(s[0]).enqueue(s[1]),UI.workspace.EasyMQTT_bridge.checked&&this.EasyMQTTBridge(s[0],s[1])}}Files.received_string=Files.received_string.replace(e,"\r\n")}static EasyMQTTBridge(e,t){var s=window.localStorage.bridgeSession;s&&xhrGET(`https://bipes.net.br/easymqtt/publish.php?session=${s}&topic=Topic${e}&value=${t}`,"",e=>{UI.notify.log(e)})}static clearQueue(){for(var e=0;e<20;e++)localStorage.getItem("queue"+e)&&(window.localStorage.removeItem("queue"+e),UI.notify.log(`Cleaned queue ${e}`))}static getText(e){var t=new XMLHttpRequest;t.open("GET","/beta2/ui/pylibs/"+e,!0),t.send(null),t.onreadystatechange=function(){4===t.readyState&&200===t.status&&(t.getResponseHeader("Content-Type"),"string"==typeof t.response)&&(document.getElementById("content_file_code"),Files.editor.getDoc().setValue(t.responseText),Files.file_save_as.className="py",document.getElementById("content_file_name").value=e)}}static makeAName(e,t){let s=e.match(/#Description: '(.*)'/),i=[...e.matchAll(/import (.*)/g)];return""==t?s?`${s[1].slice()}${t}`:"My BIPES Project":(null==s&&((s=[])[1]="code"),s[1]=s[1].toLowerCase(),s?`${s[1].replaceAll(" ","_").replaceAll(".","").slice().substring(0,30)}.bipes.${t}`:i.length?`my_${i.slice(-1)[0][1]}_project.bipes.${t}`:`my_project.bipes.${t}`)}static RGB2HEX(e,t,s){return"#"+componentToHex(e)+componentToHex(t)+componentToHex(s)}static HEX2RGB(e){var t=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;e=e.replace(t,function(e,t,s,i){return t+t+s+s+i+i});var s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return s?{r:parseInt(s[1],16),g:parseInt(s[2],16),b:parseInt(s[3],16)}:null}static HUE2HEX(e,t,s){s/=100;let i=t*Math.min(s,1-s)/100,a=t=>{let a=(t+e/30)%12,r=s-i*Math.max(Math.min(a-3,9-a,1),-1);return Math.round(255*r).toString(16).padStart(2,"0")};return`#${a(0)}${a(8)}${a(4)}`}static warningIfTrue(e,t){if(!e.workspace.isDragging||e.workspace.isDragging())return;let s=[];t.forEach((e,t)=>{e[0]()&&s.push(e[1])}),e.setWarningText(s.length>0?s.join("\n"):null)}static uid(){return(+new Date).toString(36)+Math.random().toString(36).substr(2)}static emptyXML(){return`<xml xmlns="https://bipes.net.br"><workspace><databoard><![CDATA[{"currentWorkspace":"kvflqzky5js84d7x5pe","workspace:kvflqzky5js84d7x5pe":[]}]]></databoard></workspace><block type="project_metadata" id="" x="-212" y="-612"><value name="project_author"><shadow type="text" id=""><field name="TEXT">${localStorage.account_user}</field></shadow></value><value name="project_iot_id"><shadow type="math_number" id=""><field name="NUM">0</field></shadow></value><value name="project_description"><shadow type="text" id=""><field name="TEXT">My project</field></shadow></value></block></xml>`}static exportScreenshot(){Blockly.downloadScreenshot(Code.workspace)}}class files{constructor(e){this.watcher,this.watcher_calledCount=0,this.put_file_name=null,this.put_file_data=null,this.get_file_name=null,this.get_file_data=null,this.binary_state=0,this.received_string="",this.viewOnly=!1,this.editor=CodeMirror.fromTextArea(content_file_code,{mode:"python",lineNumbers:!0}),this.fileList=get("#fileList"),this.file_save_as=get("#file_save_as"),this.blocks2Code={Python:get("#blocks2codePython"),XML:get("#blocks2codeXML")},this.blocks2Code.Python.onclick=()=>{this.internalPython()},this.blocks2Code.XML.onclick=()=>{this.internalXML()}}static update_file_status(e){UI.workspace.file_status.innerHTML=e}resize(){Code.current.includes("files")&&("files"==Code.current[0]?this.editor.setSize(window.innerWidth-18*$em,window.innerHeight-6*$em):this.editor.setSize(window.innerWidth/2-18*$em,window.innerHeight-6*$em))}put_file(){switch(Channel.mux.currentChannel){case"websocket":var e=this.put_file_name,t=this.put_file_data.length,s=new Uint8Array(82);s[0]=87,s[1]=65,s[2]=1,s[3]=0,s[4]=0,s[5]=0,s[6]=0,s[7]=0,s[8]=0,s[9]=0,s[10]=0,s[11]=0,s[12]=255&t,s[13]=t>>8&255,s[14]=t>>16&255,s[15]=t>>24&255,s[16]=255&e.length,s[17]=e.length>>8&255;for(var i=0;i<64;++i)s[18+i]=i<e.length?s[18+i]=e.charCodeAt(i):s[18+i]=0;this.binary_state=11,files.update_file_status("Sending "+this.put_file_name+"..."),console.log(s),mux.bufferPush(s);break;case"webserial":case"webbluetooth":var e=this.put_file_name,t=this.put_file_data.length;files.update_file_status(`Sending raw (USB) ${this.put_file_name}...`);let a=new TextDecoder().decode(this.put_file_data).replaceAll(/(\r\n|\r|\n)/g,"\\r").replaceAll(/'/g,"\\'").replaceAll(/"/g,'\\"').replaceAll(/\t/g,"    ");UI.progress.start(parseInt(a.length/Channel.webserial.packetSize)+1),mux.clearBuffer(),mux.bufferUnshift("\r\x03\x03"),mux.bufferPush("import struct\r"),"ESP32S2"==UI.workspace.selector.value&&(mux.bufferPush("import storage\r"),mux.bufferPush('storage.remount("/", False)\r')),mux.bufferPush(`f=open('${this.put_file_name}', 'w')\r`),mux.bufferPush(`f.write('${a}')\r`,()=>{files.update_file_status(`Sent ${Files.put_file_data.length} bytes`)}),mux.bufferPush("f.close()\r"),mux.bufferPush("\r\r\r"),files.update_file_status(`File ${this.put_file_name} sent.`)}}get_ver(){var e=new Uint8Array(82);e[0]=87,e[1]=65,e[2]=3,this.binary_state=31,mux.bufferPush(e)}handle_put_file_select(){let e=UI.workspace.put_file_select.files[0];this.put_file_name=e.name;var t=new FileReader;t.onload=e=>{this.put_file_data=new Uint8Array(e.target.result),this.put_file()},t.readAsArrayBuffer(e)}files_save_as(){for(var e=Files.editor.getDoc().getValue("\n"),t=new Uint8Array(e.length),s=0,i=e.length;s<i;s++)t[s]=e.charCodeAt(s);this.put_file_name=UI.workspace.file.value,this.put_file_data=t,this.put_file()}listFiles(){mux.bufferPush("import os; os.listdir('.')\r",files.updateTable.bind(this))}run(e){files.update_file_status("Executing  "+e),mux.bufferPush(`exec(open('./${e}').read(),globals())\r`)}delete(e){confirm("Are you sure you want to delete "+e+"?")?(mux.bufferPush(`os.remove('${e}')\r`,this.listFiles.bind(this)),files.update_file_status("Deleted  "+e)):files.update_file_status("Delete aborted for "+e)}files_view(e){this.viewOnly=!0,this.get_file(e),files.update_file_status("Downloading "+e)}files_download(e){this.viewOnly=!1,this.get_file(e)}get_file(e){switch(this.file_save_as.className="py",Channel.mux.currentChannel){case"websocket":let t=new Uint8Array(82);t[0]=87,t[1]=65,t[2]=2,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=0,t[16]=255&e.length,t[17]=e.length>>8&255;for(let s=0;s<64;++s)s<e.length?t[18+s]=e.charCodeAt(s):t[18+s]=0;this.binary_state=21,this.get_file_name=e,this.get_file_data=new Uint8Array(0),files.update_file_status(`Getting ${this.get_file_name}...`),mux.bufferPush(t);break;case"webserial":case"webbluetooth":this.binary_state=91,files.update_file_status(`Getting ${e}...`),mux.clearBuffer(),mux.bufferUnshift("\r\x03\x03"),this.get_file_name=e,this.received_string="",this.watcher_calledCount=0,mux.bufferPush(`import os, sys; os.stat('${e}')\r`),mux.bufferPush(`with open('${e}', 'rb') as infile:\rwhile True:\rresult = infile.read(32)\rif result == b'':\rbreak\r\blen = sys.stdout.write(result)\r`,()=>{}),mux.bufferPush("\r\r\r",()=>{this.watcher=setInterval(()=>{Files.get_file_webserial_()?(Files.watcher_calledCount=0,clearInterval(Files.watcher)):(Files.watcher_calledCount+=1,Files.watcher_calledCount>=10&&(UI.notify.send(MSG.ErrorGET),clearInterval(Files.watcher),Files.watcher=void 0))},250)})}}get_file_webserial_(){let e=/sys\.stdout\.write\(result\)\r\n...         \r\n...         \r\n... \r\n(.*)>>> /s,t;return!!e.test(Files.received_string)&&(2==(t=Files.received_string.match(e)).length&&(Files.get_file_data=t[1]),files.update_file_status("Got "+Files.get_file_name+", "+Files.get_file_data.length+" bytes"),Files.viewOnly?Tool.updateSourceCode(new Blob([Files.get_file_data],{type:"text/plain"}),Files.get_file_name):saveAs(new Blob([Files.get_file_data],{type:"application/octet-stream"}),Files.get_file_name),Files.received_string=Files.received_string.replace(e,"\r\n"),!0)}static updateTable(){let re=/\[(.+)?\]/g;if(re.test(this.received_string)){let match_=this.received_string.match(/\[(.+)?\]/g),treat_,split_,files_=eval("["+match_[match_.length-1].replace(/[\[\]]/g,"").split('"')+"]");UI.notify.send("File list updated at "+Tool.unix2date()+"."),this.fileList.innerHTML="",files_.forEach(e=>{let t=new DOM("div"),s=new DOM("div",{innerText:e,className:"runText"});if(/\./.test(e)){s._dom.title=`Open file ${e}`,s.onclick(this,Files.files_view,[e]),("boot.py"==e||"main.py"==e)&&s.flag("run at boot");let i=new DOM("span",{className:"icon",id:"trashIcon",title:`Delete file ${e}`}).onclick(this,Files.delete,[e]),a=new DOM("span",{className:"icon",id:"runIcon",title:`Run file ${e}`}).onclick(this,Files.run,[e]),r=new DOM("span",{className:"icon",id:"downloadIcon",title:`Download file ${e}`}).onclick(this,Files.files_download,[e]),n=new DOM("div").append([a,r,i]);t.append([s,n])}else s.flag("is directory"),t.append(s),t._dom.style.cursor="default";this.fileList.appendChild(t._dom)}),Files.received_string=Files.received_string.replace(re,"\r\n")}}editedXML2Workspace(){if(!0===window.confirm("Changes will be applied directly to the workspace and might break everything, continue?")){let e=UI.workspace.readWorkspace(this.editor.getDoc().getValue("\n"),!0),t="";try{t=Blockly.Xml.textToDom(e)}catch(s){if(!window.confirm(MSG.badXml.replace("%1",s)))return}t&&(Code.workspace.clear(),Blockly.Xml.domToWorkspace(t,Code.workspace),Code.renderContent())}}internalPython(){this.file_save_as.className="bipes-py";let e=Code.generateCode();Tool.updateSourceCode(new Blob([e],{type:"text/plain"}),Tool.makeAName(e,"py"))}internalXML(){this.file_save_as.className="bipes-xml",Tool.updateSourceCode(new Blob([Code.generateXML()],{type:"text/plain"}),"workspace.bipes.xml")}handleCurrentProject(){this.blocks2Code.Python.innerHTML=Tool.makeAName(Code.generateCode(),"py")+"<span>automatic</span>","bipes-py"==this.file_save_as.className?this.internalPython():"bipes-xml"==Files.file_save_as.className&&this.internalXML()}}class DOM{constructor(e,t){switch(this._dom,e){case"button":case"h2":case"h3":case"span":case"div":if(this._dom=document.createElement(e),"object"==typeof t)for(let s in t)["innerText","className","id","title","innerText"].includes(s)&&(this._dom[s]=t[s]);break;case"video":if(this._dom=document.createElement(e),"object"==typeof t)for(let i in t)["preload","controls","autoplay"].includes(i)&&(this._dom[i]=t[i])}return this}onclick(e,t,s){return this._dom.onclick=()=>{void 0===s?t.bind(e)():s.constructor==Array&&t.apply(e,s)},this}append(e){return e.constructor!=Array&&(e=[e]),e.forEach(e=>{/HTML(.*)Element/.test(e.constructor.name)?this._dom.appendChild(e):"DOM"==e.constructor.name&&/HTML(.*)Element/.test(e._dom)&&this._dom.appendChild(e._dom)}),this}flag(e){this._dom.innerHTML=`${this._dom.innerHTML} <span>${e}</span>`}}class Animate{constructor(){}static off(e,t){e.classList.remove("on"),setTimeout(()=>{e.classList.remove("ani","on"),void 0!=t&&t()},250)}static on(e){e.classList.add("ani"),setTimeout(()=>{e.classList.add("ani","on")},250)}}class term{constructor(){}static init(e){terminal.open(get(e)),terminal.setOption("fontSize",12),this.resize(),terminal.onData(e=>{switch(Channel.mux.currentChannel){case"websocket":e=e.replace(/\n/g,"\r"),Channel.websocket.ws.send(e);break;case"webserial":Channel.webserial.serialWrite(e);break;case"webbluetooth":mux.bufferPush(e),Channel.webbluetooth.watch()}})}static on(){terminal.setOption("disableStdin",!1),terminal.focus()}static off(){terminal.setOption("disableStdin",!0),terminal.blur()}static write(e){terminal.write(e)}static resize(){if(!Code.current.includes("console"))return;let e;e="console"==Code.current[0]?0|Math.max(50,Math.min(200,(window.innerWidth-4*$em)/7)):0|Math.max(50,Math.min(200,(window.innerWidth/2-4*$em)/7));let t=0|Math.max(15,Math.min(40,(window.innerHeight-20*$em)/12));terminal.resize(e,t)}}